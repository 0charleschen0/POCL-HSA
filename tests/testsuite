#! /bin/sh
# Generated from ../../pocl-HSA/tests/testsuite.at by GNU Autoconf 2.69.
#
# Copyright (C) 2009-2012 Free Software Foundation, Inc.
#
# This test suite is free software; the Free Software Foundation gives
# unlimited permission to copy, distribute and modify it.
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

if test "x$CONFIG_SHELL" = x; then
  as_bourne_compatible="if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '\${1+\"\$@\"}'='\"\$@\"'
  setopt NO_GLOB_SUBST
else
  case \`(set -o) 2>/dev/null\` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi
"
  as_required="as_fn_return () { (exit \$1); }
as_fn_success () { as_fn_return 0; }
as_fn_failure () { as_fn_return 1; }
as_fn_ret_success () { return 0; }
as_fn_ret_failure () { return 1; }

exitcode=0
as_fn_success || { exitcode=1; echo as_fn_success failed.; }
as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
if ( set x; as_fn_ret_success y && test x = \"\$1\" ); then :

else
  exitcode=1; echo positional parameters were not saved.
fi
test x\$exitcode = x0 || exit 1
test -x / || exit 1"
  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1
test \$(( 1 + 1 )) = 2 || exit 1"
  if (eval "$as_required") 2>/dev/null; then :
  as_have_required=yes
else
  as_have_required=no
fi
  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null; then :

else
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  as_found=:
  case $as_dir in #(
	 /*)
	   for as_base in sh bash ksh sh5; do
	     # Try only shells that exist, to save several forks.
	     as_shell=$as_dir/$as_base
	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		    { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$as_shell"; } 2>/dev/null; then :
  CONFIG_SHELL=$as_shell as_have_required=yes
		   if { $as_echo "$as_bourne_compatible""$as_suggested" | as_run=a "$as_shell"; } 2>/dev/null; then :
  break 2
fi
fi
	   done;;
       esac
  as_found=false
done
$as_found || { if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
	      { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$SHELL"; } 2>/dev/null; then :
  CONFIG_SHELL=$SHELL as_have_required=yes
fi; }
IFS=$as_save_IFS


      if test "x$CONFIG_SHELL" != x; then :
  export CONFIG_SHELL
             # We cannot yet assume a decent shell, so we have to provide a
# neutralization value for shells without unset; and this also
# works around shells that cannot unset nonexistent variables.
# Preserve -v and -x to the replacement shell.
BASH_ENV=/dev/null
ENV=/dev/null
(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
case $- in # ((((
  *v*x* | *x*v* ) as_opts=-vx ;;
  *v* ) as_opts=-v ;;
  *x* ) as_opts=-x ;;
  * ) as_opts= ;;
esac
exec $CONFIG_SHELL $as_opts "$as_myself" ${1+"$@"}
# Admittedly, this is quite paranoid, since all the known shells bail
# out after a failed `exec'.
$as_echo "$0: could not re-execute with $CONFIG_SHELL" >&2
exit 255
fi

    if test x$as_have_required = xno; then :
  $as_echo "$0: This script requires a shell more modern than all"
  $as_echo "$0: the shells that I found on your system."
  if test x${ZSH_VERSION+set} = xset ; then
    $as_echo "$0: In particular, zsh $ZSH_VERSION has bugs and should"
    $as_echo "$0: be upgraded to zsh 4.3.4 or later."
  else
    $as_echo "$0: Please tell bug-autoconf@gnu.org about your system,
$0: including any error possibly output before this
$0: message. Then install a modern shell, or manually run
$0: the script under such a shell if you do have one."
  fi
  exit 1
fi
fi
fi
SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
# Unset more variables known to interfere with behavior of common tools.
CLICOLOR_FORCE= GREP_OPTIONS=
unset CLICOLOR_FORCE GREP_OPTIONS

## --------------------- ##
## M4sh Shell Functions. ##
## --------------------- ##
# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset

# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p

# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error

if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


  as_lineno_1=$LINENO as_lineno_1a=$LINENO
  as_lineno_2=$LINENO as_lineno_2a=$LINENO
  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { $as_echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }

  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have
  # already done that, so ensure we don't try to do so again and fall
  # in an infinite loop.  This has already happened in practice.
  _as_can_reexec=no; export _as_can_reexec
  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"





SHELL=${CONFIG_SHELL-/bin/sh}

# How were we run?
at_cli_args="$@"


# Not all shells have the 'times' builtin; the subshell is needed to make
# sure we discard the 'times: not found' message from the shell.
at_times_p=false
(times) >/dev/null 2>&1 && at_times_p=:

# CLI Arguments to pass to the debugging scripts.
at_debug_args=
# -e sets to true
at_errexit_p=false
# Shall we be verbose?  ':' means no, empty means yes.
at_verbose=:
at_quiet=
# Running several jobs in parallel, 0 means as many as test groups.
at_jobs=1
at_traceon=:
at_trace_echo=:
at_check_filter_trace=:

# Shall we keep the debug scripts?  Must be `:' when the suite is
# run by a debug script, so that the script doesn't remove itself.
at_debug_p=false
# Display help message?
at_help_p=false
# Display the version message?
at_version_p=false
# List test groups?
at_list_p=false
# --clean
at_clean=false
# Test groups to run
at_groups=
# Whether to rerun failed tests.
at_recheck=
# Whether a write failure occurred
at_write_fail=0

# The directory we run the suite in.  Default to . if no -C option.
at_dir=`pwd`
# An absolute reference to this testsuite script.
case $as_myself in
  [\\/]* | ?:[\\/]* ) at_myself=$as_myself ;;
  * ) at_myself=$at_dir/$as_myself ;;
esac
# Whether -C is in effect.
at_change_dir=false

# Whether to enable colored test results.
at_color=auto
# List of the tested programs.
at_tested=''
# As many question marks as there are digits in the last test group number.
# Used to normalize the test group numbers so that `ls' lists them in
# numerical order.
at_format='???'
# Description of all the test groups.
at_help_all="1;testsuite.at:30;example1: dot product;tce;
2;testsuite.at:42;example2: matrix transpose;tce;
3;testsuite.at:48;example2a: matrix transpose (automatic locals);tce;
4;testsuite.at:56;Kernel functions as_type;conversion;
5;testsuite.at:66;Kernel functions convert_type;conversion;
6;testsuite.at:80;Kernel functions min and max when the operands are of different sign;min_max;
7;testsuite.at:91;Kernel functions fmin, fmax, fma;fmin_fmax_fma;
8;testsuite.at:103;A saturating conversion from long to uint;convert_sat_regression;
9;testsuite.at:113;Kernel functions abs bitselect clz max min popcount;;
10;testsuite.at:124;Kernel functions fabs signbit isfinite isinf isnan isnormal copysign;;
11;testsuite.at:134;Kernel functions abs abs_diff add_sat hadd mad_hi mad_sat mul_hi rhadd sub_sat;;
12;testsuite.at:147;Kernel functions << >> rotate;rotate;
13;testsuite.at:165;Trigonometric functions;;
14;testsuite.at:174;Scalar wave equation;scalarwave;
15;testsuite-workgroup.at:28;Unconditional barriers (full replication);workgroup;
16;testsuite-workgroup.at:35;Unconditional barriers (loops);workgroup;
17;testsuite-workgroup.at:42;Unbarriered for loops (full replication);workgroup;
18;testsuite-workgroup.at:49;Unbarriered for loops (loops);workgroup;
19;testsuite-workgroup.at:56;Barriered for loops (full replication);workgroup;
20;testsuite-workgroup.at:62;Barriered for loops (loops);workgroup;
21;testsuite-workgroup.at:68;Conditional barrier (full replication);condbar workgroup;
22;testsuite-workgroup.at:81;Conditional barrier (loops);condbar workgroup;
23;testsuite-workgroup.at:94;b-loop with none of the WIs reaching the barrier (full replication);b-loop workgroup;
24;testsuite-workgroup.at:105;b-loop with none of the WIs reaching the barrier (loops);b-loop workgroup;
25;testsuite-workgroup.at:116;Forcing horizontal parallelization to some outer loops (repl);workgroup outerlooppar;
26;testsuite-workgroup.at:123;Forcing horizontal parallelization to some outer loops (loops);workgroup outerlooppar;
27;testsuite-workgroup.at:130;a loop with two paths to the latch (full replication);twolatchpaths workgroup;
28;testsuite-workgroup.at:137;a loop with two paths to the latch (loops);twolatchpaths workgroup;
29;testsuite-workgroup.at:144;a b-loop with two latches (full replication);twolatches workgroup;
30;testsuite-workgroup.at:151;a b-loop with two latches (loops);twolatches workgroup;
31;testsuite-workgroup.at:158;workgroup_sizes: work-items get wrong ids (full replication);id workgroup;
32;testsuite-workgroup.at:166;workgroup_sizes: work-items get wrong ids (loop);id workgroup;
33;testsuite-regression.at:4;phi nodes not replicated (repl) - lp:927573;regression;
34;testsuite-regression.at:9;phi nodes not replicated (loops) - lp:927573;regression;
35;testsuite-regression.at:14;issues with local pointers (repl) - lp:918801;regression locals tce;
36;testsuite-regression.at:19;issues with local pointers (loops) - lp:918801;regression locals tce;
37;testsuite-regression.at:24;barrier between two for loops (repl);regression tce;
38;testsuite-regression.at:29;barrier between two for loops (loops);regression tce;
39;testsuite-regression.at:34;simple for-loop with a barrier inside (repl);regression;
40;testsuite-regression.at:39;simple for-loop with a barrier inside (loops);regression;
41;testsuite-regression.at:44;for-loop with computation after the brexit (repl) - lp:938123;regression tce;
42;testsuite-regression.at:49;for-loop with computation after the brexit (loops) - lp:938123;regression tce;
43;testsuite-regression.at:54;for-loop with a variable iteration count (repl) - lp:938883;regression;
44;testsuite-regression.at:59;for-loop with a variable iteration count (loops) - lp:938883;regression;
45;testsuite-regression.at:67;early return before a barrier region (repl) - lp:940248;regression early-return tce;
46;testsuite-regression.at:72;early return before a barrier region (loops) - lp:940248;regression early-return tce;
47;testsuite-regression.at:78;id-dependent computation before kernel exit (repl) - lp:940549;regression;
48;testsuite-regression.at:83;id-dependent computation before kernel exit (loops) - lp:940549;regression;
49;testsuite-regression.at:88;struct kernel arguments - lp:987905;regression struct;
50;testsuite-regression.at:94;vector kernel arguments - lp:987905;regression vectorarg;
51;testsuite-regression.at:102;barrier just before return (repl) - lp:1012030;regression struct;
52;testsuite-regression.at:107;barrier just before return (loops) - lp:1012030;regression struct;
53;testsuite-regression.at:112;infinite loop (repl) - lp:941558;regression infinite-loop tce;
54;testsuite-regression.at:117;infinite loop (loops) - lp:941558;regression infinite-loop tce;
55;testsuite-regression.at:122;passing a constant array as an arg - lp:1032203;regression const-array tce;
56;testsuite-regression.at:127;undominated variable from conditional barrier handling (repl) - lp:1045835;regression undominated;
57;testsuite-regression.at:132;undominated variable from conditional barrier handling (loops) - lp:1045835;regression undominated;
58;testsuite-regression.at:140;clSetKernelArg overwriting the previous kernel's args - lp:1075134;regression setkernelarg;
59;testsuite-regression.at:145;setting a buffer argument to NULL causes a segfault - lp:1109030;regression nullarg;
60;testsuite-regression.at:150;sizeof(uint);sizeof;
61;testsuite-regression.at:165;block;block;
62;testsuite-tce.at:4;A basic ttasim driver test;tce tta ttasim;
63;testsuite-tce.at:11;Half-precision floats on ttasim;tce tta ttasim half;
64;testsuite-samples.at:10;Building the sources against pocl;booksamples buildsamples;
65;testsuite-samples.at:30;Run Chapter 2: Hello World;booksamples helloworld;
66;testsuite-samples.at:40;Run Chapter 3: OpenCLConvolution;booksamples;
67;testsuite-samples.at:54;Run Chapter 6: HelloBinaryWorld;booksamples hellobinaryworld;
68;testsuite-samples.at:69;Run Chapter 7: SimpleBufferSubBuffer;booksamples simplebuffersubbuffer;
69;testsuite-samples.at:82;Run Chapter 8: ImageFilter2D;booksamples imagefilter2d;
70;testsuite-samples.at:104;Run Chapter 12: VectorAdd (C++ bindings);booksamples;
71;testsuite-viennacl.at:17;Initialize the build with cmake;viennacl build;
72;testsuite-viennacl.at:24;fft;viennacl fft;
73;testsuite-viennacl.at:31;iterators-test;viennacl iterators-test;
74;testsuite-viennacl.at:39;custom-context;viennacl custom-context;
75;testsuite-viennacl.at:46;matrix-test;viennacl matrix-test long;
76;testsuite-viennacl.at:55;matrix_range-test;viennacl matrix_range-test long;
77;testsuite-viennacl.at:64;scalar-test;viennacl scalar-test;
78;testsuite-viennacl.at:72;sparse-test;viennacl sparse-test;
79;testsuite-viennacl.at:79;structured-matrices-test;viennacl structured-matrices-test;
80;testsuite-viennacl.at:89;vectorbench;viennacl vectorbench;
81;testsuite-viennacl.at:96;vector-test;viennacl vector-test long;
82;testsuite-viennacl.at:104;vector_range-test;viennacl vector_range-test long;
83;testsuite-viennacl.at:112;blas1;viennacl blas1 long;
84;testsuite-viennacl.at:119;blas3;viennacl blas3 long;
85;testsuite-viennacl.at:127;openclbench;viennacl openclbench;
86;testsuite-runtime.at:4;Host runtime tests;runtime;
87;testsuite-rodinia.at:19;backprop;rodinia backprop long;
88;testsuite-rodinia.at:31;bfs;rodinia bfs;
89;testsuite-rodinia.at:39;cfd;rodinia cfd long;
90;testsuite-rodinia.at:51;lud;rodinia lud;
91;testsuite-rodinia.at:58;hotspot;rodinia hotspot long;
92;testsuite-rodinia.at:66;kmeans;rodinia kmeans;
93;testsuite-rodinia.at:75;lavaMD;rodinia lavamd;
94;testsuite-rodinia.at:88;pathfinder;rodinia pathfinder;
95;testsuite-rodinia.at:97;srad;rodinia srad;
96;testsuite-parboil.at:17;spmv;parboil spmv;
97;testsuite-parboil.at:26;stencil;parboil stencil;
98;testsuite-parboil.at:33;tpacf;parboil tpacf;
99;testsuite-parboil.at:44;cutcp;parboil cutcp;
100;testsuite-parboil.at:51;mri-gridding;parboil mri-gridding long;
101;testsuite-parboil.at:63;sad;parboil sad;
102;testsuite-parboil.at:72;bfs;parboil bfs bfs-parboil long;
103;testsuite-parboil.at:79;histo;parboil histo;
104;testsuite-parboil.at:88;sgemm;parboil sgemm;
105;testsuite-parboil.at:95;mri-q;parboil mri-q;
106;testsuite-parboil.at:102;lbm;parboil lbm long;
107;testsuite-amd.at:11;aesencryptdecrypt-repl;amdsdk aesencryptdecrypt-repl;
108;testsuite-amd.at:19;aesencryptdecrypt-loops;amdsdk aesencryptdecrypt-loops;
109;testsuite-amd.at:25;atomiccounters;amdsdk atomiccounters;
110;testsuite-amd.at:33;bitonicsort;amdsdk bitonicsort;
111;testsuite-amd.at:39;binarysearch;amdsdk binarysearch;
112;testsuite-amd.at:45;binomialoption-repl;amdsdk binomialoption-repl;
113;testsuite-amd.at:53;binomialoption-loops;amdsdk binomialoption-loops;
114;testsuite-amd.at:59;blackscholes;amdsdk blackscholes;
115;testsuite-amd.at:65;blackscholesdp;amdsdk blackscholesdp cl_amd_fp64;
116;testsuite-amd.at:76;boxfilter;amdsdk boxfilter;
117;testsuite-amd.at:83;dct;amdsdk dct;
118;testsuite-amd.at:89;devicefission;amdsdk devicefission;
119;testsuite-amd.at:97;dwthaar1d;amdsdk dwthaar1d;
120;testsuite-amd.at:105;fastwalshtransform;amdsdk fastwalshtransform;
121;testsuite-amd.at:111;floydwarshall;amdsdk floydwarshall;
122;testsuite-amd.at:117;fluidsimulation2d;amdsdk fluidsimulation2d cl_amd_fp64;
123;testsuite-amd.at:128;helloworld;amdsdk helloworld;
124;testsuite-amd.at:135;histogram-repl;amdsdk histogram-repl;
125;testsuite-amd.at:141;histogram-loops;amdsdk histogram-loops;
126;testsuite-amd.at:147;imageoverlap;amdsdk imageoverlap;
127;testsuite-amd.at:155;ludecomposition;amdsdk ludecomposition cl_amd_fp64;
128;testsuite-amd.at:165;mandelbrot;amdsdk mandelbrot;
129;testsuite-amd.at:173;matrixmul;amdsdk matrixmul;
130;testsuite-amd.at:179;matrixmulimage;amdsdk matrixmulimage;
131;testsuite-amd.at:187;matrixtranspose;amdsdk matrixtranspose;
132;testsuite-amd.at:193;memorymodel-repl;amdsdk memorymodel-repl;
133;testsuite-amd.at:199;memorymodel-loops;amdsdk memorymodel-loops;
134;testsuite-amd.at:205;montecarloasian;amdsdk montecarloasian;
135;testsuite-amd.at:215;montecarloasiandp;amdsdk montecarloasiandp cl_amd_fp64;
136;testsuite-amd.at:225;nbody;amdsdk nbody;
137;testsuite-amd.at:232;prefixsum;amdsdk prefixsum;
138;testsuite-amd.at:238;quasirandomsequence;amdsdk quasirandomsequence;
139;testsuite-amd.at:244;radixsort;amdsdk radixsort;
140;testsuite-amd.at:250;recursivegaussian;amdsdk recursivegaussian;
141;testsuite-amd.at:256;reduction;amdsdk reduction;
142;testsuite-amd.at:262;scanlargearrays;amdsdk scanlargearrays;
143;testsuite-amd.at:269;simpleconvolution;amdsdk simpleconvolution;
144;testsuite-amd.at:275;simpleimage;amdsdk simpleimage;
145;testsuite-amd.at:283;sobelfilter;amdsdk sobelfilter;
146;testsuite-amd.at:289;template;amdsdk template;
147;testsuite-amd.at:295;templatec;amdsdk templatec;
148;testsuite-amd.at:301;transferoverlap;amdsdk transferoverlap;
149;testsuite-amd.at:309;urng;amdsdk urng;
150;testsuite-vexcl.at:10;fft;vexcl fft;
151;testsuite-vexcl.at:19;generator;vexcl generator;
152;testsuite-vexcl.at:25;multiple_objects;vexcl multiple_objects;
153;testsuite-vexcl.at:31;multivector_arithmetics;vexcl multivector_arithmetics;
154;testsuite-vexcl.at:37;multivector_create;vexcl multivector_create;
155;testsuite-vexcl.at:43;random;vexcl random;
156;testsuite-vexcl.at:49;spmv;vexcl spmv;
157;testsuite-vexcl.at:55;stencil;vexcl stencil;
158;testsuite-vexcl.at:63;vector_arithmetics;vexcl vector_arithmetics;
159;testsuite-vexcl.at:69;vector_copy;vexcl vector_copy;
160;testsuite-vexcl.at:75;vector_create;vexcl vector_create;
"
# List of the all the test groups.
at_groups_all=`$as_echo "$at_help_all" | sed 's/;.*//'`

# at_fn_validate_ranges NAME...
# -----------------------------
# Validate and normalize the test group number contained in each variable
# NAME. Leading zeroes are treated as decimal.
at_fn_validate_ranges ()
{
  for at_grp
  do
    eval at_value=\$$at_grp
    if test $at_value -lt 1 || test $at_value -gt 160; then
      $as_echo "invalid test group: $at_value" >&2
      exit 1
    fi
    case $at_value in
      0*) # We want to treat leading 0 as decimal, like expr and test, but
	  # AS_VAR_ARITH treats it as octal if it uses $(( )).
	  # With XSI shells, ${at_value#${at_value%%[1-9]*}} avoids the
	  # expr fork, but it is not worth the effort to determine if the
	  # shell supports XSI when the user can just avoid leading 0.
	  eval $at_grp='`expr $at_value + 0`' ;;
    esac
  done
}

at_prev=
for at_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$at_prev"; then
    at_option=$at_prev=$at_option
    at_prev=
  fi

  case $at_option in
  *=?*) at_optarg=`expr "X$at_option" : '[^=]*=\(.*\)'` ;;
  *)    at_optarg= ;;
  esac

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $at_option in
    --help | -h )
	at_help_p=:
	;;

    --list | -l )
	at_list_p=:
	;;

    --version | -V )
	at_version_p=:
	;;

    --clean | -c )
	at_clean=:
	;;

    --color )
	at_color=always
	;;
    --color=* )
	case $at_optarg in
	no | never | none) at_color=never ;;
	auto | tty | if-tty) at_color=auto ;;
	always | yes | force) at_color=always ;;
	*) at_optname=`echo " $at_option" | sed 's/^ //; s/=.*//'`
	   as_fn_error $? "unrecognized argument to $at_optname: $at_optarg" ;;
	esac
	;;

    --debug | -d )
	at_debug_p=:
	;;

    --errexit | -e )
	at_debug_p=:
	at_errexit_p=:
	;;

    --verbose | -v )
	at_verbose=; at_quiet=:
	;;

    --trace | -x )
	at_traceon='set -x'
	at_trace_echo=echo
	at_check_filter_trace=at_fn_filter_trace
	;;

    [0-9] | [0-9][0-9] | [0-9][0-9][0-9] | [0-9][0-9][0-9][0-9])
	at_fn_validate_ranges at_option
	as_fn_append at_groups "$at_option$as_nl"
	;;

    # Ranges
    [0-9]- | [0-9][0-9]- | [0-9][0-9][0-9]- | [0-9][0-9][0-9][0-9]-)
	at_range_start=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_start
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '/^'$at_range_start'$/,$p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    -[0-9] | -[0-9][0-9] | -[0-9][0-9][0-9] | -[0-9][0-9][0-9][0-9])
	at_range_end=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_end
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '1,/^'$at_range_end'$/p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    [0-9]-[0-9] | [0-9]-[0-9][0-9] | [0-9]-[0-9][0-9][0-9] | \
    [0-9]-[0-9][0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9] | \
    [0-9][0-9]-[0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] )
	at_range_start=`expr $at_option : '\(.*\)-'`
	at_range_end=`expr $at_option : '.*-\(.*\)'`
	if test $at_range_start -gt $at_range_end; then
	  at_tmp=$at_range_end
	  at_range_end=$at_range_start
	  at_range_start=$at_tmp
	fi
	at_fn_validate_ranges at_range_start at_range_end
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '/^'$at_range_start'$/,/^'$at_range_end'$/p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    # Directory selection.
    --directory | -C )
	at_prev=--directory
	;;
    --directory=* )
	at_change_dir=:
	at_dir=$at_optarg
	if test x- = "x$at_dir" ; then
	  at_dir=./-
	fi
	;;

    # Parallel execution.
    --jobs | -j )
	at_jobs=0
	;;
    --jobs=* | -j[0-9]* )
	if test -n "$at_optarg"; then
	  at_jobs=$at_optarg
	else
	  at_jobs=`expr X$at_option : 'X-j\(.*\)'`
	fi
	case $at_jobs in *[!0-9]*)
	  at_optname=`echo " $at_option" | sed 's/^ //; s/[0-9=].*//'`
	  as_fn_error $? "non-numeric argument to $at_optname: $at_jobs" ;;
	esac
	;;

    # Keywords.
    --keywords | -k )
	at_prev=--keywords
	;;
    --keywords=* )
	at_groups_selected=$at_help_all
	at_save_IFS=$IFS
	IFS=,
	set X $at_optarg
	shift
	IFS=$at_save_IFS
	for at_keyword
	do
	  at_invert=
	  case $at_keyword in
	  '!'*)
	    at_invert="-v"
	    at_keyword=`expr "X$at_keyword" : 'X!\(.*\)'`
	    ;;
	  esac
	  # It is on purpose that we match the test group titles too.
	  at_groups_selected=`$as_echo "$at_groups_selected" |
	      grep -i $at_invert "^[1-9][^;]*;.*[; ]$at_keyword[ ;]"`
	done
	# Smash the keywords.
	at_groups_selected=`$as_echo "$at_groups_selected" | sed 's/;.*//'`
	as_fn_append at_groups "$at_groups_selected$as_nl"
	;;
    --recheck)
	at_recheck=:
	;;

    *=*)
	at_envvar=`expr "x$at_option" : 'x\([^=]*\)='`
	# Reject names that are not valid shell variable names.
	case $at_envvar in
	  '' | [0-9]* | *[!_$as_cr_alnum]* )
	    as_fn_error $? "invalid variable name: \`$at_envvar'" ;;
	esac
	at_value=`$as_echo "$at_optarg" | sed "s/'/'\\\\\\\\''/g"`
	# Export now, but save eval for later and for debug scripts.
	export $at_envvar
	as_fn_append at_debug_args " $at_envvar='$at_value'"
	;;

     *) $as_echo "$as_me: invalid option: $at_option" >&2
	$as_echo "Try \`$0 --help' for more information." >&2
	exit 1
	;;
  esac
done

# Verify our last option didn't require an argument
if test -n "$at_prev"; then :
  as_fn_error $? "\`$at_prev' requires an argument"
fi

# The file containing the suite.
at_suite_log=$at_dir/$as_me.log

# Selected test groups.
if test -z "$at_groups$at_recheck"; then
  at_groups=$at_groups_all
else
  if test -n "$at_recheck" && test -r "$at_suite_log"; then
    at_oldfails=`sed -n '
      /^Failed tests:$/,/^Skipped tests:$/{
	s/^[ ]*\([1-9][0-9]*\):.*/\1/p
      }
      /^Unexpected passes:$/,/^## Detailed failed tests/{
	s/^[ ]*\([1-9][0-9]*\):.*/\1/p
      }
      /^## Detailed failed tests/q
      ' "$at_suite_log"`
    as_fn_append at_groups "$at_oldfails$as_nl"
  fi
  # Sort the tests, removing duplicates.
  at_groups=`$as_echo "$at_groups" | sort -nu | sed '/^$/d'`
fi

if test x"$at_color" = xalways \
   || { test x"$at_color" = xauto && test -t 1; }; then
  at_red=`printf '\033[0;31m'`
  at_grn=`printf '\033[0;32m'`
  at_lgn=`printf '\033[1;32m'`
  at_blu=`printf '\033[1;34m'`
  at_std=`printf '\033[m'`
else
  at_red= at_grn= at_lgn= at_blu= at_std=
fi

# Help message.
if $at_help_p; then
  cat <<_ATEOF || at_write_fail=1
Usage: $0 [OPTION]... [VARIABLE=VALUE]... [TESTS]

Run all the tests, or the selected TESTS, given by numeric ranges, and
save a detailed log file.  Upon failure, create debugging scripts.

Do not change environment variables directly.  Instead, set them via
command line arguments.  Set \`AUTOTEST_PATH' to select the executables
to exercise.  Each relative directory is expanded as build and source
directories relative to the top level of this distribution.
E.g., from within the build directory /tmp/foo-1.0, invoking this:

  $ $0 AUTOTEST_PATH=bin

is equivalent to the following, assuming the source directory is /src/foo-1.0:

  PATH=/tmp/foo-1.0/bin:/src/foo-1.0/bin:\$PATH $0
_ATEOF
cat <<_ATEOF || at_write_fail=1

Operation modes:
  -h, --help     print the help message, then exit
  -V, --version  print version number, then exit
  -c, --clean    remove all the files this test suite might create and exit
  -l, --list     describes all the tests, or the selected TESTS
_ATEOF
cat <<_ATEOF || at_write_fail=1

Execution tuning:
  -C, --directory=DIR
                 change to directory DIR before starting
      --color[=never|auto|always]
                 disable colored test results, or enable even without terminal
  -j, --jobs[=N]
                 Allow N jobs at once; infinite jobs with no arg (default 1)
  -k, --keywords=KEYWORDS
                 select the tests matching all the comma-separated KEYWORDS
                 multiple \`-k' accumulate; prefixed \`!' negates a KEYWORD
      --recheck  select all tests that failed or passed unexpectedly last time
  -e, --errexit  abort as soon as a test fails; implies --debug
  -v, --verbose  force more detailed output
                 default for debugging scripts
  -d, --debug    inhibit clean up and top-level logging
                 default for debugging scripts
  -x, --trace    enable tests shell tracing
_ATEOF
cat <<_ATEOF || at_write_fail=1

Report bugs to <pocl-devel@lists.sourceforge.net>.
_ATEOF
  exit $at_write_fail
fi

# List of tests.
if $at_list_p; then
  cat <<_ATEOF || at_write_fail=1
pocl 0.8 test suite test groups:

 NUM: FILE-NAME:LINE     TEST-GROUP-NAME
      KEYWORDS

_ATEOF
  # Pass an empty line as separator between selected groups and help.
  $as_echo "$at_groups$as_nl$as_nl$at_help_all" |
    awk 'NF == 1 && FS != ";" {
	   selected[$ 1] = 1
	   next
	 }
	 /^$/ { FS = ";" }
	 NF > 0 {
	   if (selected[$ 1]) {
	     printf " %3d: %-18s %s\n", $ 1, $ 2, $ 3
	     if ($ 4) {
	       lmax = 79
	       indent = "     "
	       line = indent
	       len = length (line)
	       n = split ($ 4, a, " ")
	       for (i = 1; i <= n; i++) {
		 l = length (a[i]) + 1
		 if (i > 1 && len + l > lmax) {
		   print line
		   line = indent " " a[i]
		   len = length (line)
		 } else {
		   line = line " " a[i]
		   len += l
		 }
	       }
	       if (n)
		 print line
	     }
	   }
	 }' || at_write_fail=1
  exit $at_write_fail
fi
if $at_version_p; then
  $as_echo "$as_me (pocl 0.8)" &&
  cat <<\_ATEOF || at_write_fail=1

Copyright (C) 2012 Free Software Foundation, Inc.
This test suite is free software; the Free Software Foundation gives
unlimited permission to copy, distribute and modify it.
_ATEOF
  exit $at_write_fail
fi

# Should we print banners?  Yes if more than one test is run.
case $at_groups in #(
  *$as_nl* )
      at_print_banners=: ;; #(
  * ) at_print_banners=false ;;
esac
# Text for banner N, set to a single space once printed.
# Banner 1. testsuite.at:28
# Category starts at test group 1.
at_banner_text_1="OpenCL specification tests"
# Banner 2. testsuite.at:54
# Category starts at test group 4.
at_banner_text_2="Kernel runtime library"
# Banner 3. testsuite.at:172
# Category starts at test group 14.
at_banner_text_3="Full applications"
# Banner 4. testsuite-workgroup.at:26
# Category starts at test group 15.
at_banner_text_4="Workgroup creation tests"
# Banner 5. testsuite-regression.at:2
# Category starts at test group 33.
at_banner_text_5="Regression tests"
# Banner 6. testsuite-tce.at:2
# Category starts at test group 62.
at_banner_text_6="TCE tests"
# Banner 7. testsuite-samples.at:8
# Category starts at test group 64.
at_banner_text_7="OpenCL Programming Guide Samples"
# Banner 8. testsuite-viennacl.at:15
# Category starts at test group 71.
at_banner_text_8="ViennaCL 1.3.1 tests"
# Banner 9. testsuite-runtime.at:2
# Category starts at test group 86.
at_banner_text_9="Runtime library tests"
# Banner 10. testsuite-rodinia.at:17
# Category starts at test group 87.
at_banner_text_10="Rodinia 2.0.1 tests"
# Banner 11. testsuite-parboil.at:15
# Category starts at test group 96.
at_banner_text_11="Parboil tests"
# Banner 12. testsuite-amd.at:9
# Category starts at test group 107.
at_banner_text_12="AMD APP SDK tests"
# Banner 13. testsuite-vexcl.at:8
# Category starts at test group 150.
at_banner_text_13="VexCL tests"

# Take any -C into account.
if $at_change_dir ; then
  test x != "x$at_dir" && cd "$at_dir" \
    || as_fn_error $? "unable to change directory"
  at_dir=`pwd`
fi

# Load the config files for any default variable assignments.
for at_file in atconfig atlocal
do
  test -r $at_file || continue
  . ./$at_file || as_fn_error $? "invalid content: $at_file"
done

# Autoconf <=2.59b set at_top_builddir instead of at_top_build_prefix:
: "${at_top_build_prefix=$at_top_builddir}"

# Perform any assignments requested during argument parsing.
eval "$at_debug_args"

# atconfig delivers names relative to the directory the test suite is
# in, but the groups themselves are run in testsuite-dir/group-dir.
if test -n "$at_top_srcdir"; then
  builddir=../..
  for at_dir_var in srcdir top_srcdir top_build_prefix
  do
    eval at_val=\$at_$at_dir_var
    case $at_val in
      [\\/$]* | ?:[\\/]* ) at_prefix= ;;
      *) at_prefix=../../ ;;
    esac
    eval "$at_dir_var=\$at_prefix\$at_val"
  done
fi

## -------------------- ##
## Directory structure. ##
## -------------------- ##

# This is the set of directories and files used by this script
# (non-literals are capitalized):
#
# TESTSUITE         - the testsuite
# TESTSUITE.log     - summarizes the complete testsuite run
# TESTSUITE.dir/    - created during a run, remains after -d or failed test
# + at-groups/      - during a run: status of all groups in run
# | + NNN/          - during a run: meta-data about test group NNN
# | | + check-line  - location (source file and line) of current AT_CHECK
# | | + status      - exit status of current AT_CHECK
# | | + stdout      - stdout of current AT_CHECK
# | | + stder1      - stderr, including trace
# | | + stderr      - stderr, with trace filtered out
# | | + test-source - portion of testsuite that defines group
# | | + times       - timestamps for computing duration
# | | + pass        - created if group passed
# | | + xpass       - created if group xpassed
# | | + fail        - created if group failed
# | | + xfail       - created if group xfailed
# | | + skip        - created if group skipped
# + at-stop         - during a run: end the run if this file exists
# + at-source-lines - during a run: cache of TESTSUITE line numbers for extraction
# + 0..NNN/         - created for each group NNN, remains after -d or failed test
# | + TESTSUITE.log - summarizes the group results
# | + ...           - files created during the group

# The directory the whole suite works in.
# Should be absolute to let the user `cd' at will.
at_suite_dir=$at_dir/$as_me.dir
# The file containing the suite ($at_dir might have changed since earlier).
at_suite_log=$at_dir/$as_me.log
# The directory containing helper files per test group.
at_helper_dir=$at_suite_dir/at-groups
# Stop file: if it exists, do not start new jobs.
at_stop_file=$at_suite_dir/at-stop
# The fifo used for the job dispatcher.
at_job_fifo=$at_suite_dir/at-job-fifo

if $at_clean; then
  test -d "$at_suite_dir" &&
    find "$at_suite_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
  rm -f -r "$at_suite_dir" "$at_suite_log"
  exit $?
fi

# Don't take risks: use only absolute directories in PATH.
#
# For stand-alone test suites (ie. atconfig was not found),
# AUTOTEST_PATH is relative to `.'.
#
# For embedded test suites, AUTOTEST_PATH is relative to the top level
# of the package.  Then expand it into build/src parts, since users
# may create executables in both places.
AUTOTEST_PATH=`$as_echo "$AUTOTEST_PATH" | sed "s|:|$PATH_SEPARATOR|g"`
at_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $AUTOTEST_PATH $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -n "$at_path" && as_fn_append at_path $PATH_SEPARATOR
case $as_dir in
  [\\/]* | ?:[\\/]* )
    as_fn_append at_path "$as_dir"
    ;;
  * )
    if test -z "$at_top_build_prefix"; then
      # Stand-alone test suite.
      as_fn_append at_path "$as_dir"
    else
      # Embedded test suite.
      as_fn_append at_path "$at_top_build_prefix$as_dir$PATH_SEPARATOR"
      as_fn_append at_path "$at_top_srcdir/$as_dir"
    fi
    ;;
esac
  done
IFS=$as_save_IFS


# Now build and simplify PATH.
#
# There might be directories that don't exist, but don't redirect
# builtins' (eg., cd) stderr directly: Ultrix's sh hates that.
at_new_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $at_path
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -d "$as_dir" || continue
case $as_dir in
  [\\/]* | ?:[\\/]* ) ;;
  * ) as_dir=`(cd "$as_dir" && pwd) 2>/dev/null` ;;
esac
case $PATH_SEPARATOR$at_new_path$PATH_SEPARATOR in
  *$PATH_SEPARATOR$as_dir$PATH_SEPARATOR*) ;;
  $PATH_SEPARATOR$PATH_SEPARATOR) at_new_path=$as_dir ;;
  *) as_fn_append at_new_path "$PATH_SEPARATOR$as_dir" ;;
esac
  done
IFS=$as_save_IFS

PATH=$at_new_path
export PATH

# Setting up the FDs.



# 5 is the log file.  Not to be overwritten if `-d'.
if $at_debug_p; then
  at_suite_log=/dev/null
else
  : >"$at_suite_log"
fi
exec 5>>"$at_suite_log"

# Banners and logs.
$as_echo "## -------------------- ##
## pocl 0.8 test suite. ##
## -------------------- ##"
{
  $as_echo "## -------------------- ##
## pocl 0.8 test suite. ##
## -------------------- ##"
  echo

  $as_echo "$as_me: command line was:"
  $as_echo "  \$ $0 $at_cli_args"
  echo

  # If ChangeLog exists, list a few lines in case it might help determining
  # the exact version.
  if test -n "$at_top_srcdir" && test -f "$at_top_srcdir/ChangeLog"; then
    $as_echo "## ---------- ##
## ChangeLog. ##
## ---------- ##"
    echo
    sed 's/^/| /;10q' "$at_top_srcdir/ChangeLog"
    echo
  fi

  {
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    $as_echo "PATH: $as_dir"
  done
IFS=$as_save_IFS

}
  echo

  # Contents of the config files.
  for at_file in atconfig atlocal
  do
    test -r $at_file || continue
    $as_echo "$as_me: $at_file:"
    sed 's/^/| /' $at_file
    echo
  done
} >&5


## ------------------------- ##
## Autotest shell functions. ##
## ------------------------- ##

# at_fn_banner NUMBER
# -------------------
# Output banner NUMBER, provided the testsuite is running multiple groups and
# this particular banner has not yet been printed.
at_fn_banner ()
{
  $at_print_banners || return 0
  eval at_banner_text=\$at_banner_text_$1
  test "x$at_banner_text" = "x " && return 0
  eval "at_banner_text_$1=\" \""
  if test -z "$at_banner_text"; then
    $at_first || echo
  else
    $as_echo "$as_nl$at_banner_text$as_nl"
  fi
} # at_fn_banner

# at_fn_check_prepare_notrace REASON LINE
# ---------------------------------------
# Perform AT_CHECK preparations for the command at LINE for an untraceable
# command; REASON is the reason for disabling tracing.
at_fn_check_prepare_notrace ()
{
  $at_trace_echo "Not enabling shell tracing (command contains $1)"
  $as_echo "$2" >"$at_check_line_file"
  at_check_trace=: at_check_filter=:
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_trace LINE
# ------------------------------
# Perform AT_CHECK preparations for the command at LINE for a traceable
# command.
at_fn_check_prepare_trace ()
{
  $as_echo "$1" >"$at_check_line_file"
  at_check_trace=$at_traceon at_check_filter=$at_check_filter_trace
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_dynamic COMMAND LINE
# ----------------------------------------
# Decide if COMMAND at LINE is traceable at runtime, and call the appropriate
# preparation function.
at_fn_check_prepare_dynamic ()
{
  case $1 in
    *$as_nl*)
      at_fn_check_prepare_notrace 'an embedded newline' "$2" ;;
    *)
      at_fn_check_prepare_trace "$2" ;;
  esac
}

# at_fn_filter_trace
# ------------------
# Remove the lines in the file "$at_stderr" generated by "set -x" and print
# them to stderr.
at_fn_filter_trace ()
{
  mv "$at_stderr" "$at_stder1"
  grep '^ *+' "$at_stder1" >&2
  grep -v '^ *+' "$at_stder1" >"$at_stderr"
}

# at_fn_log_failure FILE-LIST
# ---------------------------
# Copy the files in the list on stdout with a "> " prefix, and exit the shell
# with a failure exit code.
at_fn_log_failure ()
{
  for file
    do $as_echo "$file:"; sed 's/^/> /' "$file"; done
  echo 1 > "$at_status_file"
  exit 1
}

# at_fn_check_skip EXIT-CODE LINE
# -------------------------------
# Check whether EXIT-CODE is a special exit code (77 or 99), and if so exit
# the test group subshell with that same exit code. Use LINE in any report
# about test failure.
at_fn_check_skip ()
{
  case $1 in
    99) echo 99 > "$at_status_file"; at_failed=:
	$as_echo "$2: hard failure"; exit 99;;
    77) echo 77 > "$at_status_file"; exit 77;;
  esac
}

# at_fn_check_status EXPECTED EXIT-CODE LINE
# ------------------------------------------
# Check whether EXIT-CODE is the EXPECTED exit code, and if so do nothing.
# Otherwise, if it is 77 or 99, exit the test group subshell with that same
# exit code; if it is anything else print an error message referring to LINE,
# and fail the test.
at_fn_check_status ()
{
  case $2 in
    $1 ) ;;
    77) echo 77 > "$at_status_file"; exit 77;;
    99) echo 99 > "$at_status_file"; at_failed=:
	$as_echo "$3: hard failure"; exit 99;;
    *) $as_echo "$3: exit code was $2, expected $1"
      at_failed=:;;
  esac
}

# at_fn_diff_devnull FILE
# -----------------------
# Emit a diff between /dev/null and FILE. Uses "test -s" to avoid useless diff
# invocations.
at_fn_diff_devnull ()
{
  test -s "$1" || return 0
  $at_diff "$at_devnull" "$1"
}

# at_fn_test NUMBER
# -----------------
# Parse out test NUMBER from the tail of this file.
at_fn_test ()
{
  eval at_sed=\$at_sed$1
  sed "$at_sed" "$at_myself" > "$at_test_source"
}

# at_fn_create_debugging_script
# -----------------------------
# Create the debugging script $at_group_dir/run which will reproduce the
# current test group.
at_fn_create_debugging_script ()
{
  {
    echo "#! /bin/sh" &&
    echo 'test "${ZSH_VERSION+set}" = set && alias -g '\''${1+"$@"}'\''='\''"$@"'\''' &&
    $as_echo "cd '$at_dir'" &&
    $as_echo "exec \${CONFIG_SHELL-$SHELL} \"$at_myself\" -v -d $at_debug_args $at_group \${1+\"\$@\"}" &&
    echo 'exit 1'
  } >"$at_group_dir/run" &&
  chmod +x "$at_group_dir/run"
}

## -------------------------------- ##
## End of autotest shell functions. ##
## -------------------------------- ##
{
  $as_echo "## ---------------- ##
## Tested programs. ##
## ---------------- ##"
  echo
} >&5

# Report what programs are being tested.
for at_program in : $at_tested
do
  test "$at_program" = : && continue
  case $at_program in
    [\\/]* | ?:[\\/]* ) $at_program_=$at_program ;;
    * )
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -f "$as_dir/$at_program" && break
  done
IFS=$as_save_IFS

    at_program_=$as_dir/$at_program ;;
  esac
  if test -f "$at_program_"; then
    {
      $as_echo "$at_srcdir/testsuite.at:25: $at_program_ --version"
      "$at_program_" --version </dev/null
      echo
    } >&5 2>&1
  else
    as_fn_error $? "cannot find $at_program" "$LINENO" 5
  fi
done

{
  $as_echo "## ------------------ ##
## Running the tests. ##
## ------------------ ##"
} >&5

at_start_date=`date`
at_start_time=`date +%s 2>/dev/null`
$as_echo "$as_me: starting at: $at_start_date" >&5

# Create the master directory if it doesn't already exist.
as_dir="$at_suite_dir"; as_fn_mkdir_p ||
  as_fn_error $? "cannot create \`$at_suite_dir'" "$LINENO" 5

# Can we diff with `/dev/null'?  DU 5.0 refuses.
if diff /dev/null /dev/null >/dev/null 2>&1; then
  at_devnull=/dev/null
else
  at_devnull=$at_suite_dir/devnull
  >"$at_devnull"
fi

# Use `diff -u' when possible.
if at_diff=`diff -u "$at_devnull" "$at_devnull" 2>&1` && test -z "$at_diff"
then
  at_diff='diff -u'
else
  at_diff=diff
fi

# Get the last needed group.
for at_group in : $at_groups; do :; done

# Extract the start and end lines of each test group at the tail
# of this file
awk '
BEGIN { FS="" }
/^#AT_START_/ {
  start = NR
}
/^#AT_STOP_/ {
  test = substr ($ 0, 10)
  print "at_sed" test "=\"1," start "d;" (NR-1) "q\""
  if (test == "'"$at_group"'") exit
}' "$at_myself" > "$at_suite_dir/at-source-lines" &&
. "$at_suite_dir/at-source-lines" ||
  as_fn_error $? "cannot create test line number cache" "$LINENO" 5
rm -f "$at_suite_dir/at-source-lines"

# Set number of jobs for `-j'; avoid more jobs than test groups.
set X $at_groups; shift; at_max_jobs=$#
if test $at_max_jobs -eq 0; then
  at_jobs=1
fi
if test $at_jobs -ne 1 &&
   { test $at_jobs -eq 0 || test $at_jobs -gt $at_max_jobs; }; then
  at_jobs=$at_max_jobs
fi

# If parallel mode, don't output banners, don't split summary lines.
if test $at_jobs -ne 1; then
  at_print_banners=false
  at_quiet=:
fi

# Set up helper dirs.
rm -rf "$at_helper_dir" &&
mkdir "$at_helper_dir" &&
cd "$at_helper_dir" &&
{ test -z "$at_groups" || mkdir $at_groups; } ||
as_fn_error $? "testsuite directory setup failed" "$LINENO" 5

# Functions for running a test group.  We leave the actual
# test group execution outside of a shell function in order
# to avoid hitting zsh 4.x exit status bugs.

# at_fn_group_prepare
# -------------------
# Prepare for running a test group.
at_fn_group_prepare ()
{
  # The directory for additional per-group helper files.
  at_job_dir=$at_helper_dir/$at_group
  # The file containing the location of the last AT_CHECK.
  at_check_line_file=$at_job_dir/check-line
  # The file containing the exit status of the last command.
  at_status_file=$at_job_dir/status
  # The files containing the output of the tested commands.
  at_stdout=$at_job_dir/stdout
  at_stder1=$at_job_dir/stder1
  at_stderr=$at_job_dir/stderr
  # The file containing the code for a test group.
  at_test_source=$at_job_dir/test-source
  # The file containing dates.
  at_times_file=$at_job_dir/times

  # Be sure to come back to the top test directory.
  cd "$at_suite_dir"

  # Clearly separate the test groups when verbose.
  $at_first || $at_verbose echo

  at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'


  # Create a fresh directory for the next test group, and enter.
  # If one already exists, the user may have invoked ./run from
  # within that directory; we remove the contents, but not the
  # directory itself, so that we aren't pulling the rug out from
  # under the shell's notion of the current directory.
  at_group_dir=$at_suite_dir/$at_group_normalized
  at_group_log=$at_group_dir/$as_me.log
  if test -d "$at_group_dir"; then
  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx {} \;
  rm -fr "$at_group_dir"/* "$at_group_dir"/.[!.] "$at_group_dir"/.??*
fi ||
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: test directory for $at_group_normalized could not be cleaned" >&5
$as_echo "$as_me: WARNING: test directory for $at_group_normalized could not be cleaned" >&2;}
  # Be tolerant if the above `rm' was not able to remove the directory.
  as_dir="$at_group_dir"; as_fn_mkdir_p

  echo 0 > "$at_status_file"

  # In verbose mode, append to the log file *and* show on
  # the standard output; in quiet mode only write to the log.
  if test -z "$at_verbose"; then
    at_tee_pipe='tee -a "$at_group_log"'
  else
    at_tee_pipe='cat >> "$at_group_log"'
  fi
}

# at_fn_group_banner ORDINAL LINE DESC PAD [BANNER]
# -------------------------------------------------
# Declare the test group ORDINAL, located at LINE with group description DESC,
# and residing under BANNER. Use PAD to align the status column.
at_fn_group_banner ()
{
  at_setup_line="$2"
  test -n "$5" && at_fn_banner $5
  at_desc="$3"
  case $1 in
    [0-9])      at_desc_line="  $1: ";;
    [0-9][0-9]) at_desc_line=" $1: " ;;
    *)          at_desc_line="$1: "  ;;
  esac
  as_fn_append at_desc_line "$3$4"
  $at_quiet $as_echo_n "$at_desc_line"
  echo "#                             -*- compilation -*-" >> "$at_group_log"
}

# at_fn_group_postprocess
# -----------------------
# Perform cleanup after running a test group.
at_fn_group_postprocess ()
{
  # Be sure to come back to the suite directory, in particular
  # since below we might `rm' the group directory we are in currently.
  cd "$at_suite_dir"

  if test ! -f "$at_check_line_file"; then
    sed "s/^ */$as_me: WARNING: /" <<_ATEOF
      A failure happened in a test group before any test could be
      run. This means that test suite is improperly designed.  Please
      report this failure to <pocl-devel@lists.sourceforge.net>.
_ATEOF
    $as_echo "$at_setup_line" >"$at_check_line_file"
    at_status=99
  fi
  $at_verbose $as_echo_n "$at_group. $at_setup_line: "
  $as_echo_n "$at_group. $at_setup_line: " >> "$at_group_log"
  case $at_xfail:$at_status in
    yes:0)
	at_msg="UNEXPECTED PASS"
	at_res=xpass
	at_errexit=$at_errexit_p
	at_color=$at_red
	;;
    no:0)
	at_msg="ok"
	at_res=pass
	at_errexit=false
	at_color=$at_grn
	;;
    *:77)
	at_msg='skipped ('`cat "$at_check_line_file"`')'
	at_res=skip
	at_errexit=false
	at_color=$at_blu
	;;
    no:* | *:99)
	at_msg='FAILED ('`cat "$at_check_line_file"`')'
	at_res=fail
	at_errexit=$at_errexit_p
	at_color=$at_red
	;;
    yes:*)
	at_msg='expected failure ('`cat "$at_check_line_file"`')'
	at_res=xfail
	at_errexit=false
	at_color=$at_lgn
	;;
  esac
  echo "$at_res" > "$at_job_dir/$at_res"
  # In parallel mode, output the summary line only afterwards.
  if test $at_jobs -ne 1 && test -n "$at_verbose"; then
    $as_echo "$at_desc_line $at_color$at_msg$at_std"
  else
    # Make sure there is a separator even with long titles.
    $as_echo " $at_color$at_msg$at_std"
  fi
  at_log_msg="$at_group. $at_desc ($at_setup_line): $at_msg"
  case $at_status in
    0|77)
      # $at_times_file is only available if the group succeeded.
      # We're not including the group log, so the success message
      # is written in the global log separately.  But we also
      # write to the group log in case they're using -d.
      if test -f "$at_times_file"; then
	at_log_msg="$at_log_msg     ("`sed 1d "$at_times_file"`')'
	rm -f "$at_times_file"
      fi
      $as_echo "$at_log_msg" >> "$at_group_log"
      $as_echo "$at_log_msg" >&5

      # Cleanup the group directory, unless the user wants the files
      # or the success was unexpected.
      if $at_debug_p || test $at_res = xpass; then
	at_fn_create_debugging_script
	if test $at_res = xpass && $at_errexit; then
	  echo stop > "$at_stop_file"
	fi
      else
	if test -d "$at_group_dir"; then
	  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
	  rm -fr "$at_group_dir"
	fi
	rm -f "$at_test_source"
      fi
      ;;
    *)
      # Upon failure, include the log into the testsuite's global
      # log.  The failure message is written in the group log.  It
      # is later included in the global log.
      $as_echo "$at_log_msg" >> "$at_group_log"

      # Upon failure, keep the group directory for autopsy, and create
      # the debugging script.  With -e, do not start any further tests.
      at_fn_create_debugging_script
      if $at_errexit; then
	echo stop > "$at_stop_file"
      fi
      ;;
  esac
}


## ------------ ##
## Driver loop. ##
## ------------ ##


if (set -m && set +m && set +b) >/dev/null 2>&1; then
  set +b
  at_job_control_on='set -m' at_job_control_off='set +m' at_job_group=-
else
  at_job_control_on=: at_job_control_off=: at_job_group=
fi

for at_signal in 1 2 15; do
  trap 'set +x; set +e
	$at_job_control_off
	at_signal='"$at_signal"'
	echo stop > "$at_stop_file"
	trap "" $at_signal
	at_pgids=
	for at_pgid in `jobs -p 2>/dev/null`; do
	  at_pgids="$at_pgids $at_job_group$at_pgid"
	done
	test -z "$at_pgids" || kill -$at_signal $at_pgids 2>/dev/null
	wait
	if test "$at_jobs" -eq 1 || test -z "$at_verbose"; then
	  echo >&2
	fi
	at_signame=`kill -l $at_signal 2>&1 || echo $at_signal`
	set x $at_signame
	test 1 -gt 2 && at_signame=$at_signal
	{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: caught signal $at_signame, bailing out" >&5
$as_echo "$as_me: WARNING: caught signal $at_signame, bailing out" >&2;}
	as_fn_arith 128 + $at_signal && exit_status=$as_val
	as_fn_exit $exit_status' $at_signal
done

rm -f "$at_stop_file"
at_first=:

if test $at_jobs -ne 1 &&
     rm -f "$at_job_fifo" &&
     test -n "$at_job_group" &&
     ( mkfifo "$at_job_fifo" && trap 'exit 1' PIPE STOP TSTP ) 2>/dev/null
then
  # FIFO job dispatcher.

  trap 'at_pids=
	for at_pid in `jobs -p`; do
	  at_pids="$at_pids $at_job_group$at_pid"
	done
	if test -n "$at_pids"; then
	  at_sig=TSTP
	  test "${TMOUT+set}" = set && at_sig=STOP
	  kill -$at_sig $at_pids 2>/dev/null
	fi
	kill -STOP $$
	test -z "$at_pids" || kill -CONT $at_pids 2>/dev/null' TSTP

  echo
  # Turn jobs into a list of numbers, starting from 1.
  at_joblist=`$as_echo "$at_groups" | sed -n 1,${at_jobs}p`

  set X $at_joblist
  shift
  for at_group in $at_groups; do
    $at_job_control_on 2>/dev/null
    (
      # Start one test group.
      $at_job_control_off
      if $at_first; then
	exec 7>"$at_job_fifo"
      else
	exec 6<&-
      fi
      trap 'set +x; set +e
	    trap "" PIPE
	    echo stop > "$at_stop_file"
	    echo >&7
	    as_fn_exit 141' PIPE
      at_fn_group_prepare
      if cd "$at_group_dir" &&
	 at_fn_test $at_group &&
	 . "$at_test_source"
      then :; else
	{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
$as_echo "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
	at_failed=:
      fi
      at_fn_group_postprocess
      echo >&7
    ) &
    $at_job_control_off
    if $at_first; then
      at_first=false
      exec 6<"$at_job_fifo" 7>"$at_job_fifo"
    fi
    shift # Consume one token.
    if test $# -gt 0; then :; else
      read at_token <&6 || break
      set x $*
    fi
    test -f "$at_stop_file" && break
  done
  exec 7>&-
  # Read back the remaining ($at_jobs - 1) tokens.
  set X $at_joblist
  shift
  if test $# -gt 0; then
    shift
    for at_job
    do
      read at_token
    done <&6
  fi
  exec 6<&-
  wait
else
  # Run serially, avoid forks and other potential surprises.
  for at_group in $at_groups; do
    at_fn_group_prepare
    if cd "$at_group_dir" &&
       at_fn_test $at_group &&
       . "$at_test_source"; then :; else
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
$as_echo "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
      at_failed=:
    fi
    at_fn_group_postprocess
    test -f "$at_stop_file" && break
    at_first=false
  done
fi

# Wrap up the test suite with summary statistics.
cd "$at_helper_dir"

# Use ?..???? when the list must remain sorted, the faster * otherwise.
at_pass_list=`for f in */pass; do echo $f; done | sed '/\*/d; s,/pass,,'`
at_skip_list=`for f in */skip; do echo $f; done | sed '/\*/d; s,/skip,,'`
at_xfail_list=`for f in */xfail; do echo $f; done | sed '/\*/d; s,/xfail,,'`
at_xpass_list=`for f in ?/xpass ??/xpass ???/xpass ????/xpass; do
		 echo $f; done | sed '/?/d; s,/xpass,,'`
at_fail_list=`for f in ?/fail ??/fail ???/fail ????/fail; do
		echo $f; done | sed '/?/d; s,/fail,,'`

set X $at_pass_list $at_xpass_list $at_xfail_list $at_fail_list $at_skip_list
shift; at_group_count=$#
set X $at_xpass_list; shift; at_xpass_count=$#; at_xpass_list=$*
set X $at_xfail_list; shift; at_xfail_count=$#
set X $at_fail_list; shift; at_fail_count=$#; at_fail_list=$*
set X $at_skip_list; shift; at_skip_count=$#

as_fn_arith $at_group_count - $at_skip_count && at_run_count=$as_val
as_fn_arith $at_xpass_count + $at_fail_count && at_unexpected_count=$as_val
as_fn_arith $at_xfail_count + $at_fail_count && at_total_fail_count=$as_val

# Back to the top directory.
cd "$at_dir"
rm -rf "$at_helper_dir"

# Compute the duration of the suite.
at_stop_date=`date`
at_stop_time=`date +%s 2>/dev/null`
$as_echo "$as_me: ending at: $at_stop_date" >&5
case $at_start_time,$at_stop_time in
  [0-9]*,[0-9]*)
    as_fn_arith $at_stop_time - $at_start_time && at_duration_s=$as_val
    as_fn_arith $at_duration_s / 60 && at_duration_m=$as_val
    as_fn_arith $at_duration_m / 60 && at_duration_h=$as_val
    as_fn_arith $at_duration_s % 60 && at_duration_s=$as_val
    as_fn_arith $at_duration_m % 60 && at_duration_m=$as_val
    at_duration="${at_duration_h}h ${at_duration_m}m ${at_duration_s}s"
    $as_echo "$as_me: test suite duration: $at_duration" >&5
    ;;
esac

echo
$as_echo "## ------------- ##
## Test results. ##
## ------------- ##"
echo
{
  echo
  $as_echo "## ------------- ##
## Test results. ##
## ------------- ##"
  echo
} >&5

if test $at_run_count = 1; then
  at_result="1 test"
  at_were=was
else
  at_result="$at_run_count tests"
  at_were=were
fi
if $at_errexit_p && test $at_unexpected_count != 0; then
  if test $at_xpass_count = 1; then
    at_result="$at_result $at_were run, one passed"
  else
    at_result="$at_result $at_were run, one failed"
  fi
  at_result="$at_result unexpectedly and inhibited subsequent tests."
  at_color=$at_red
else
  # Don't you just love exponential explosion of the number of cases?
  at_color=$at_red
  case $at_xpass_count:$at_fail_count:$at_xfail_count in
    # So far, so good.
    0:0:0) at_result="$at_result $at_were successful." at_color=$at_grn ;;
    0:0:*) at_result="$at_result behaved as expected." at_color=$at_lgn ;;

    # Some unexpected failures
    0:*:0) at_result="$at_result $at_were run,
$at_fail_count failed unexpectedly." ;;

    # Some failures, both expected and unexpected
    0:*:1) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    0:*:*) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;

    # No unexpected failures, but some xpasses
    *:0:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly." ;;

    # No expected failures, but failures and xpasses
    *:1:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failure)." ;;
    *:*:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failures)." ;;

    # All of them.
    *:*:1) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    *:*:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;
  esac

  if test $at_skip_count = 0 && test $at_run_count -gt 1; then
    at_result="All $at_result"
  fi
fi

# Now put skips in the mix.
case $at_skip_count in
  0) ;;
  1) at_result="$at_result
1 test was skipped." ;;
  *) at_result="$at_result
$at_skip_count tests were skipped." ;;
esac

if test $at_unexpected_count = 0; then
  echo "$at_color$at_result$at_std"
  echo "$at_result" >&5
else
  echo "${at_color}ERROR: $at_result$at_std" >&2
  echo "ERROR: $at_result" >&5
  {
    echo
    $as_echo "## ------------------------ ##
## Summary of the failures. ##
## ------------------------ ##"

    # Summary of failed and skipped tests.
    if test $at_fail_count != 0; then
      echo "Failed tests:"
      $SHELL "$at_myself" $at_fail_list --list
      echo
    fi
    if test $at_skip_count != 0; then
      echo "Skipped tests:"
      $SHELL "$at_myself" $at_skip_list --list
      echo
    fi
    if test $at_xpass_count != 0; then
      echo "Unexpected passes:"
      $SHELL "$at_myself" $at_xpass_list --list
      echo
    fi
    if test $at_fail_count != 0; then
      $as_echo "## ---------------------- ##
## Detailed failed tests. ##
## ---------------------- ##"
      echo
      for at_group in $at_fail_list
      do
	at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'

	cat "$at_suite_dir/$at_group_normalized/$as_me.log"
	echo
      done
      echo
    fi
    if test -n "$at_top_srcdir"; then
      sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## ${at_top_build_prefix}config.log ##
_ASBOX
      sed 's/^/| /' ${at_top_build_prefix}config.log
      echo
    fi
  } >&5

  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $as_me.log was created. ##
_ASBOX

  echo
  if $at_debug_p; then
    at_msg='per-test log files'
  else
    at_msg="\`${at_testdir+${at_testdir}/}$as_me.log'"
  fi
  $as_echo "Please send $at_msg and all information you think might help:

   To: <pocl-devel@lists.sourceforge.net>
   Subject: [pocl 0.8] $as_me: $at_fail_list${at_fail_list:+ failed${at_xpass_list:+, }}$at_xpass_list${at_xpass_list:+ passed unexpectedly}

You may investigate any problem if you feel able to do so, in which
case the test suite provides a good starting point.  Its output may
be found below \`${at_testdir+${at_testdir}/}$as_me.dir'.
"
  exit 1
fi

exit 0

## ------------- ##
## Actual tests. ##
## ------------- ##
#AT_START_1
at_fn_group_banner 1 'testsuite.at:30' \
  "example1: dot product" "                          " 1
at_xfail=no
(
  $as_echo "1. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
(0.000000, 0.000000, 0.000000, 0.000000) . (0.000000, 0.000000, 0.000000, 0.000000) = 0.000000
(1.000000, 1.000000, 1.000000, 1.000000) . (1.000000, 1.000000, 1.000000, 1.000000) = 4.000000
(2.000000, 2.000000, 2.000000, 2.000000) . (2.000000, 2.000000, 2.000000, 2.000000) = 16.000000
(3.000000, 3.000000, 3.000000, 3.000000) . (3.000000, 3.000000, 3.000000, 3.000000) = 36.000000
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:39: \$abs_top_builddir/examples/example1/example1"
at_fn_check_prepare_dynamic "$abs_top_builddir/examples/example1/example1" "testsuite.at:39"
( $at_check_trace; $abs_top_builddir/examples/example1/example1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1
#AT_START_2
at_fn_group_banner 2 'testsuite.at:42' \
  "example2: matrix transpose" "                     " 1
at_xfail=no
(
  $as_echo "2. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite.at:44: \$abs_top_builddir/examples/example2/example2"
at_fn_check_prepare_dynamic "$abs_top_builddir/examples/example2/example2" "testsuite.at:44"
( $at_check_trace; $abs_top_builddir/examples/example2/example2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:44"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_2
#AT_START_3
at_fn_group_banner 3 'testsuite.at:48' \
  "example2a: matrix transpose (automatic locals)" " " 1
at_xfail=no
(
  $as_echo "3. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite.at:50: \$abs_top_builddir/examples/example2a/example2a"
at_fn_check_prepare_dynamic "$abs_top_builddir/examples/example2a/example2a" "testsuite.at:50"
( $at_check_trace; $abs_top_builddir/examples/example2a/example2a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_3
#AT_START_4
at_fn_group_banner 4 'testsuite.at:56' \
  "Kernel functions as_type" "                       " 2
at_xfail=no
(
  $as_echo "4. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "testsuite.at:57" >"$at_check_line_file"
(grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:57"

cat >expout <<'_ATEOF'
Running test test_as_type...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:63: \$abs_top_builddir/tests/kernel/kernel test_as_type"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_as_type" "testsuite.at:63"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_as_type
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:63"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_4
#AT_START_5
at_fn_group_banner 5 'testsuite.at:66' \
  "Kernel functions convert_type" "                  " 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q armv && at_xfail=yes
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc &&
             grep -q "#define LLVM_3_3" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "5. $at_setup_line: testing $at_desc ..."
  $at_traceon


#LLVM PPC backend regression, most likely


cat >expout <<'_ATEOF'
Running test test_convert_type...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:76: \$abs_top_builddir/tests/kernel/kernel test_convert_type"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_convert_type" "testsuite.at:76"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_convert_type
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:76"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_5
#AT_START_6
at_fn_group_banner 6 'testsuite.at:80' \
  "Kernel functions min and max when the operands are of different sign" "" 2
at_xfail=no
(
  $as_echo "6. $at_setup_line: testing $at_desc ..."
  $at_traceon

# This used to produces an LLVM 3.3 bug that appeared only with Intel CPUs
# without SSE4.2. http://llvm.org/bugs/show_bug.cgi?id=15977

cat >expout <<'_ATEOF'
Running test test_min_max...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:88: \$abs_top_builddir/tests/kernel/kernel test_min_max"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_min_max" "testsuite.at:88"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_min_max
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_6
#AT_START_7
at_fn_group_banner 7 'testsuite.at:91' \
  "Kernel functions fmin, fmax, fma" "               " 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q armv && at_xfail=yes
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc && at_xfail=yes
(
  $as_echo "7. $at_setup_line: testing $at_desc ..."
  $at_traceon




cat >expout <<'_ATEOF'
Running test test_fmin_fmax_fma...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:99: \$abs_top_builddir/tests/kernel/kernel test_fmin_fmax_fma"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_fmin_fmax_fma" "testsuite.at:99"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_fmin_fmax_fma
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:99"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_7
#AT_START_8
at_fn_group_banner 8 'testsuite.at:103' \
  "A saturating conversion from long to uint" "      " 2
at_xfail=no
(
  $as_echo "8. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
Running test test_convert_sat_regression...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:109: \$abs_top_builddir/tests/kernel/kernel test_convert_sat_regression"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_convert_sat_regression" "testsuite.at:109"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_convert_sat_regression
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:109"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_8
#AT_START_9
at_fn_group_banner 9 'testsuite.at:113' \
  "Kernel functions abs bitselect clz max min popcount" "" 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc && at_xfail=yes
(
  $as_echo "9. $at_setup_line: testing $at_desc ..."
  $at_traceon

#Fails on tce due to bug #1160383
#AT_KEYWORDS([tce])

cat >expout <<'_ATEOF'
Running test test_bitselect...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:121: POCL_VECTORIZE_WORK_GROUPS=0 \$abs_top_builddir/tests/kernel/kernel test_bitselect"
at_fn_check_prepare_dynamic "POCL_VECTORIZE_WORK_GROUPS=0 $abs_top_builddir/tests/kernel/kernel test_bitselect" "testsuite.at:121"
( $at_check_trace; POCL_VECTORIZE_WORK_GROUPS=0 $abs_top_builddir/tests/kernel/kernel test_bitselect
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_9
#AT_START_10
at_fn_group_banner 10 'testsuite.at:124' \
  "Kernel functions fabs signbit isfinite isinf isnan isnormal copysign" "" 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc && at_xfail=yes
(
  $as_echo "10. $at_setup_line: testing $at_desc ..."
  $at_traceon



cat >expout <<'_ATEOF'
Running test test_fabs...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:131: \$abs_top_builddir/tests/kernel/kernel test_fabs"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_fabs" "testsuite.at:131"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_fabs
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_10
#AT_START_11
at_fn_group_banner 11 'testsuite.at:134' \
  "Kernel functions abs abs_diff add_sat hadd mad_hi mad_sat mul_hi rhadd sub_sat" "" 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc && at_xfail=yes
      grep -q "#define LLVM_3_4" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "11. $at_setup_line: testing $at_desc ..."
  $at_traceon

#Fails on tce due to bug #1160383
#AT_KEYWORDS([tce])

#fails with: undefined symbol: _Z5rhaddcc. Probably related to the crash mentioned in the fabs test above.

cat >expout <<'_ATEOF'
Running test test_hadd...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:144: \$abs_top_builddir/tests/kernel/kernel test_hadd 2>&1"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_hadd 2>&1" "testsuite.at:144"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_hadd 2>&1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:144"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_11
#AT_START_12
at_fn_group_banner 12 'testsuite.at:147' \
  "Kernel functions << >> rotate" "                  " 2
at_xfail=no
      grep -q "#define LLVM_3_2" $abs_top_builddir/config.h && at_xfail=yes
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc &&
             grep -q "#define LLVM_3_3" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "12. $at_setup_line: testing $at_desc ..."
  $at_traceon

# Fails because of bugs in rotate.
# At least in Debian 6.0/x86_64/LLVM 3.2 and
# Ubuntu 12.04/x86/LLVM 3.2

# tce fails currently this test so removed it from the keywords.
# https://bugs.launchpad.net/tce/+bug/1180309
#LLVM 3.3 regression on ppc - looks like an optimization+ppc codegen bug


cat >expout <<'_ATEOF'
Running test test_rotate...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:162: \$abs_top_builddir/tests/kernel/kernel test_rotate"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_rotate" "testsuite.at:162"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_rotate
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:162"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_12
#AT_START_13
at_fn_group_banner 13 'testsuite.at:165' \
  "Trigonometric functions" "                        " 2
at_xfail=no
(
  $as_echo "13. $at_setup_line: testing $at_desc ..."
  $at_traceon

cat >expout <<'_ATEOF'
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:169: \$abs_top_builddir/examples/trig/trig"
at_fn_check_prepare_dynamic "$abs_top_builddir/examples/trig/trig" "testsuite.at:169"
( $at_check_trace; $abs_top_builddir/examples/trig/trig
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:169"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_13
#AT_START_14
at_fn_group_banner 14 'testsuite.at:174' \
  "Scalar wave equation" "                           " 3
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc && at_xfail=yes
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q armv && at_xfail=yes
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q i.86 && at_xfail=yes
(
  $as_echo "14. $at_setup_line: testing $at_desc ..."
  $at_traceon

#lack of double support on ppc, arm, x86-32bit




cat >expout <<'_ATEOF'
Initial condition: t=0
Time step 1: t=0.03125
Time step 2: t=0.0625
Time step 3: t=0.09375
Time step 4: t=0.125
phi(0       ,0       ,0       ) = 0
phi(0.0625  ,0.0625  ,0.0625  ) = 0.0057744
phi(0.125   ,0.125   ,0.125   ) = 0.0435832
phi(0.1875  ,0.1875  ,0.1875  ) = 0.133357
phi(0.25    ,0.25    ,0.25    ) = 0.274951
phi(0.3125  ,0.3125  ,0.3125  ) = 0.447032
phi(0.375   ,0.375   ,0.375   ) = 0.613262
phi(0.4375  ,0.4375  ,0.4375  ) = 0.733705
phi(0.5     ,0.5     ,0.5     ) = 0.777678
phi(0.5625  ,0.5625  ,0.5625  ) = 0.733705
phi(0.625   ,0.625   ,0.625   ) = 0.613262
phi(0.6875  ,0.6875  ,0.6875  ) = 0.447032
phi(0.75    ,0.75    ,0.75    ) = 0.274951
phi(0.8125  ,0.8125  ,0.8125  ) = 0.133357
phi(0.875   ,0.875   ,0.875   ) = 0.0435832
phi(0.9375  ,0.9375  ,0.9375  ) = 0.0057744
phi(1       ,1       ,1       ) = 0
Done.
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:205: \$abs_top_builddir/examples/scalarwave/scalarwave"
at_fn_check_prepare_dynamic "$abs_top_builddir/examples/scalarwave/scalarwave" "testsuite.at:205"
( $at_check_trace; $abs_top_builddir/examples/scalarwave/scalarwave
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:205"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_14
#AT_START_15
at_fn_group_banner 15 'testsuite-workgroup.at:28' \
  "Unconditional barriers (full replication)" "      " 4
at_xfail=no
(
  $as_echo "15. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:30: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel basic_barriers.cl 2 2 2 2"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel basic_barriers.cl 2 2 2 2" "testsuite-workgroup.at:30"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel basic_barriers.cl 2 2 2 2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/basic_barriers_2_2_2_2.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_15
#AT_START_16
at_fn_group_banner 16 'testsuite-workgroup.at:35' \
  "Unconditional barriers (loops)" "                 " 4
at_xfail=no
(
  $as_echo "16. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:37: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel basic_barriers.cl 2 2 2 2"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel basic_barriers.cl 2 2 2 2" "testsuite-workgroup.at:37"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel basic_barriers.cl 2 2 2 2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/basic_barriers_2_2_2_2.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_16
#AT_START_17
at_fn_group_banner 17 'testsuite-workgroup.at:42' \
  "Unbarriered for loops (full replication)" "       " 4
at_xfail=no
(
  $as_echo "17. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:44: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel forloops.cl 2 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel forloops.cl 2 2 1 1" "testsuite-workgroup.at:44"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel forloops.cl 2 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/forloops_2_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:44"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_17
#AT_START_18
at_fn_group_banner 18 'testsuite-workgroup.at:49' \
  "Unbarriered for loops (loops)" "                  " 4
at_xfail=no
(
  $as_echo "18. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:51: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel forloops.cl 2 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel forloops.cl 2 2 1 1" "testsuite-workgroup.at:51"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel forloops.cl 2 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/forloops_2_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_18
#AT_START_19
at_fn_group_banner 19 'testsuite-workgroup.at:56' \
  "Barriered for loops (full replication)" "         " 4
at_xfail=no
(
  $as_echo "19. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:58: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel loopbarriers.cl 2 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel loopbarriers.cl 2 2 1 1" "testsuite-workgroup.at:58"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel loopbarriers.cl 2 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:59: sort -c stdout"
at_fn_check_prepare_trace "testsuite-workgroup.at:59"
( $at_check_trace; sort -c stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_19
#AT_START_20
at_fn_group_banner 20 'testsuite-workgroup.at:62' \
  "Barriered for loops (loops)" "                    " 4
at_xfail=no
(
  $as_echo "20. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:64: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel loopbarriers.cl 2 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel loopbarriers.cl 2 2 1 1" "testsuite-workgroup.at:64"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel loopbarriers.cl 2 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:65: sort -c stdout"
at_fn_check_prepare_trace "testsuite-workgroup.at:65"
( $at_check_trace; sort -c stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_20
#AT_START_21
at_fn_group_banner 21 'testsuite-workgroup.at:68' \
  "Conditional barrier (full replication)" "         " 4
at_xfail=no
(
  $as_echo "21. $at_setup_line: testing $at_desc ..."
  $at_traceon

cat >expout <<'_ATEOF'
LOCAL_ID=0 before if
LOCAL_ID=0 inside if
LOCAL_ID=1 before if
LOCAL_ID=1 inside if
LOCAL_ID=0 after if
LOCAL_ID=1 after if
_ATEOF


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:78: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel conditional_barriers.cl 1 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel conditional_barriers.cl 1 2 1 1" "testsuite-workgroup.at:78"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel conditional_barriers.cl 1 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:78"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_21
#AT_START_22
at_fn_group_banner 22 'testsuite-workgroup.at:81' \
  "Conditional barrier (loops)" "                    " 4
at_xfail=no
(
  $as_echo "22. $at_setup_line: testing $at_desc ..."
  $at_traceon

cat >expout <<'_ATEOF'
LOCAL_ID=0 before if
LOCAL_ID=0 inside if
LOCAL_ID=1 before if
LOCAL_ID=1 inside if
LOCAL_ID=0 after if
LOCAL_ID=1 after if
_ATEOF


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:91: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel conditional_barriers.cl 1 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel conditional_barriers.cl 1 2 1 1" "testsuite-workgroup.at:91"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel conditional_barriers.cl 1 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_22
#AT_START_23
at_fn_group_banner 23 'testsuite-workgroup.at:94' \
  "b-loop with none of the WIs reaching the barrier (full replication)" "" 4
at_xfail=no
(
  $as_echo "23. $at_setup_line: testing $at_desc ..."
  $at_traceon

cat >expout <<'_ATEOF'
gid_x 0 after barrier at iteration 0
gid_x 1 after barrier at iteration 0
I am 0 and I break out from the loop.
I am 1 and I also break out from the loop.
_ATEOF


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:102: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel tricky_for.cl 1 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel tricky_for.cl 1 2 1 1" "testsuite-workgroup.at:102"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel tricky_for.cl 1 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_23
#AT_START_24
at_fn_group_banner 24 'testsuite-workgroup.at:105' \
  "b-loop with none of the WIs reaching the barrier (loops)" "" 4
at_xfail=no
(
  $as_echo "24. $at_setup_line: testing $at_desc ..."
  $at_traceon

cat >expout <<'_ATEOF'
gid_x 0 after barrier at iteration 0
gid_x 1 after barrier at iteration 0
I am 0 and I break out from the loop.
I am 1 and I also break out from the loop.
_ATEOF


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:113: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel tricky_for.cl 1 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel tricky_for.cl 1 2 1 1" "testsuite-workgroup.at:113"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel tricky_for.cl 1 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_24
#AT_START_25
at_fn_group_banner 25 'testsuite-workgroup.at:116' \
  "Forcing horizontal parallelization to some outer loops (repl)" "" 4
at_xfail=no
(
  $as_echo "25. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:118: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel outerlooppar.cl 2 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel outerlooppar.cl 2 2 1 1" "testsuite-workgroup.at:118"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel outerlooppar.cl 2 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/outerlooppar_2_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:118"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_25
#AT_START_26
at_fn_group_banner 26 'testsuite-workgroup.at:123' \
  "Forcing horizontal parallelization to some outer loops (loops)" "" 4
at_xfail=no
(
  $as_echo "26. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:125: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel outerlooppar.cl 2 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel outerlooppar.cl 2 2 1 1" "testsuite-workgroup.at:125"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel outerlooppar.cl 2 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/outerlooppar_2_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:125"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_26
#AT_START_27
at_fn_group_banner 27 'testsuite-workgroup.at:130' \
  "a loop with two paths to the latch (full replication)" "" 4
at_xfail=no
(
  $as_echo "27. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:132: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel for_bug.cl 1 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel for_bug.cl 1 2 1 1" "testsuite-workgroup.at:132"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel for_bug.cl 1 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/for_bug_1_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_27
#AT_START_28
at_fn_group_banner 28 'testsuite-workgroup.at:137' \
  "a loop with two paths to the latch (loops)" "     " 4
at_xfail=no
(
  $as_echo "28. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:139: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel for_bug.cl 1 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel for_bug.cl 1 2 1 1" "testsuite-workgroup.at:139"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel for_bug.cl 1 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/for_bug_1_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:139"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_28
#AT_START_29
at_fn_group_banner 29 'testsuite-workgroup.at:144' \
  "a b-loop with two latches (full replication)" "   " 4
at_xfail=no
(
  $as_echo "29. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:146: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel multilatch_bloop.cl 1 3 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel multilatch_bloop.cl 1 3 1 1" "testsuite-workgroup.at:146"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel multilatch_bloop.cl 1 3 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/multilatch_bloop_1_3_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:146"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_29
#AT_START_30
at_fn_group_banner 30 'testsuite-workgroup.at:151' \
  "a b-loop with two latches (loops)" "              " 4
at_xfail=no
(
  $as_echo "30. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:153: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=loops \$abs_top_builddir/tests/workgroup/run_kernel multilatch_bloop.cl 1 3 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=loops $abs_top_builddir/tests/workgroup/run_kernel multilatch_bloop.cl 1 3 1 1" "testsuite-workgroup.at:153"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=loops $abs_top_builddir/tests/workgroup/run_kernel multilatch_bloop.cl 1 3 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/multilatch_bloop_1_3_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_30
#AT_START_31
at_fn_group_banner 31 'testsuite-workgroup.at:158' \
  "workgroup_sizes: work-items get wrong ids (full replication)" "" 4
at_xfail=no
(
  $as_echo "31. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:160: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel print_all_ids.cl 1 1 1 4 | sort"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-workgroup.at:160"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel print_all_ids.cl 1 1 1 4 | sort
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/print_all_ids_114114.txt)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:160"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_31
#AT_START_32
at_fn_group_banner 32 'testsuite-workgroup.at:166' \
  "workgroup_sizes: work-items get wrong ids (loop)" "" 4
at_xfail=no
(
  $as_echo "32. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:168: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel print_all_ids.cl 1 1 1 4 | sort"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-workgroup.at:168"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel print_all_ids.cl 1 1 1 4 | sort
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/print_all_ids_114114.txt)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:168"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_32
#AT_START_33
at_fn_group_banner 33 'testsuite-regression.at:4' \
  "phi nodes not replicated (repl) - lp:927573" "    " 5
at_xfail=no
(
  $as_echo "33. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:6: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_loop_phi_replication"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_loop_phi_replication" "testsuite-regression.at:6"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_loop_phi_replication
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:6"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_33
#AT_START_34
at_fn_group_banner 34 'testsuite-regression.at:9' \
  "phi nodes not replicated (loops) - lp:927573" "   " 5
at_xfail=no
(
  $as_echo "34. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:11: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_loop_phi_replication"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_loop_phi_replication" "testsuite-regression.at:11"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_loop_phi_replication
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:11"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_34
#AT_START_35
at_fn_group_banner 35 'testsuite-regression.at:14' \
  "issues with local pointers (repl) - lp:918801" "  " 5
at_xfail=no
(
  $as_echo "35. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:16: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_locals"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_locals" "testsuite-regression.at:16"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_locals
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:16"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_35
#AT_START_36
at_fn_group_banner 36 'testsuite-regression.at:19' \
  "issues with local pointers (loops) - lp:918801" " " 5
at_xfail=no
(
  $as_echo "36. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:21: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_locals"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_locals" "testsuite-regression.at:21"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_locals
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_36
#AT_START_37
at_fn_group_banner 37 'testsuite-regression.at:24' \
  "barrier between two for loops (repl)" "           " 5
at_xfail=no
(
  $as_echo "37. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:26: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_barrier_between_for_loops"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_barrier_between_for_loops" "testsuite-regression.at:26"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_barrier_between_for_loops
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:26"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_37
#AT_START_38
at_fn_group_banner 38 'testsuite-regression.at:29' \
  "barrier between two for loops (loops)" "          " 5
at_xfail=no
(
  $as_echo "38. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:31: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_barrier_between_for_loops"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_barrier_between_for_loops" "testsuite-regression.at:31"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_barrier_between_for_loops
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_38
#AT_START_39
at_fn_group_banner 39 'testsuite-regression.at:34' \
  "simple for-loop with a barrier inside (repl)" "   " 5
at_xfail=no
(
  $as_echo "39. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:36: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_simple_for_with_a_barrier"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_simple_for_with_a_barrier" "testsuite-regression.at:36"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_simple_for_with_a_barrier
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:36"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_39
#AT_START_40
at_fn_group_banner 40 'testsuite-regression.at:39' \
  "simple for-loop with a barrier inside (loops)" "  " 5
at_xfail=no
(
  $as_echo "40. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:41: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_simple_for_with_a_barrier"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_simple_for_with_a_barrier" "testsuite-regression.at:41"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_simple_for_with_a_barrier
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_40
#AT_START_41
at_fn_group_banner 41 'testsuite-regression.at:44' \
  "for-loop with computation after the brexit (repl) - lp:938123" "" 5
at_xfail=no
(
  $as_echo "41. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:46: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_multi_level_loops_with_barriers"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_multi_level_loops_with_barriers" "testsuite-regression.at:46"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_multi_level_loops_with_barriers
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:46"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_41
#AT_START_42
at_fn_group_banner 42 'testsuite-regression.at:49' \
  "for-loop with computation after the brexit (loops) - lp:938123" "" 5
at_xfail=no
(
  $as_echo "42. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:51: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_multi_level_loops_with_barriers"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_multi_level_loops_with_barriers" "testsuite-regression.at:51"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_multi_level_loops_with_barriers
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_42
#AT_START_43
at_fn_group_banner 43 'testsuite-regression.at:54' \
  "for-loop with a variable iteration count (repl) - lp:938883" "" 5
at_xfail=no
(
  $as_echo "43. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:56: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_for_with_var_iteration_count"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_for_with_var_iteration_count" "testsuite-regression.at:56"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_for_with_var_iteration_count
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_43
#AT_START_44
at_fn_group_banner 44 'testsuite-regression.at:59' \
  "for-loop with a variable iteration count (loops) - lp:938883" "" 5
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc &&\
  grep -q "define LLVM_3_1" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "44. $at_setup_line: testing $at_desc ..."
  $at_traceon


#this broke on ppc in commit 525, for LLVM 3.1

{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:64: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_for_with_var_iteration_count"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_for_with_var_iteration_count" "testsuite-regression.at:64"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_for_with_var_iteration_count
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_44
#AT_START_45
at_fn_group_banner 45 'testsuite-regression.at:67' \
  "early return before a barrier region (repl) - lp:940248" "" 5
at_xfail=no
(
  $as_echo "45. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:69: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_early_return"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_early_return" "testsuite-regression.at:69"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_early_return
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:69"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_45
#AT_START_46
at_fn_group_banner 46 'testsuite-regression.at:72' \
  "early return before a barrier region (loops) - lp:940248" "" 5
at_xfail=no
(
  $as_echo "46. $at_setup_line: testing $at_desc ..."
  $at_traceon


#AT_SKIP_IF(true)
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:75: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_early_return"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_early_return" "testsuite-regression.at:75"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_early_return
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_46
#AT_START_47
at_fn_group_banner 47 'testsuite-regression.at:78' \
  "id-dependent computation before kernel exit (repl) - lp:940549" "" 5
at_xfail=no
(
  $as_echo "47. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:80: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_id_dependent_computation"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_id_dependent_computation" "testsuite-regression.at:80"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_id_dependent_computation
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:80"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_47
#AT_START_48
at_fn_group_banner 48 'testsuite-regression.at:83' \
  "id-dependent computation before kernel exit (loops) - lp:940549" "" 5
at_xfail=no
(
  $as_echo "48. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:85: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_id_dependent_computation"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_id_dependent_computation" "testsuite-regression.at:85"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_id_dependent_computation
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_48
#AT_START_49
at_fn_group_banner 49 'testsuite-regression.at:88' \
  "struct kernel arguments - lp:987905" "            " 5
at_xfail=yes
(
  $as_echo "49. $at_setup_line: testing $at_desc ..."
  $at_traceon



{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:91: \$abs_top_builddir/tests/regression/test_structs_as_args"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/regression/test_structs_as_args" "testsuite-regression.at:91"
( $at_check_trace; $abs_top_builddir/tests/regression/test_structs_as_args
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_49
#AT_START_50
at_fn_group_banner 50 'testsuite-regression.at:94' \
  "vector kernel arguments - lp:987905" "            " 5
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc &&
             grep -q "define LLVM_3_2" $abs_top_builddir/config.h && at_xfail=yes
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | egrep -q 'x86_64' && at_xfail=yes
(
  $as_echo "50. $at_setup_line: testing $at_desc ..."
  $at_traceon




{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:99: \$abs_top_builddir/tests/regression/test_vectors_as_args"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/regression/test_vectors_as_args" "testsuite-regression.at:99"
( $at_check_trace; $abs_top_builddir/tests/regression/test_vectors_as_args
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:99"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_50
#AT_START_51
at_fn_group_banner 51 'testsuite-regression.at:102' \
  "barrier just before return (repl) - lp:1012030" " " 5
at_xfail=no
(
  $as_echo "51. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:104: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_barrier_before_return"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_barrier_before_return" "testsuite-regression.at:104"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_barrier_before_return
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_51
#AT_START_52
at_fn_group_banner 52 'testsuite-regression.at:107' \
  "barrier just before return (loops) - lp:1012030" "" 5
at_xfail=no
(
  $as_echo "52. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:109: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_barrier_before_return"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_barrier_before_return" "testsuite-regression.at:109"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_barrier_before_return
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:109"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_52
#AT_START_53
at_fn_group_banner 53 'testsuite-regression.at:112' \
  "infinite loop (repl) - lp:941558" "               " 5
at_xfail=no
(
  $as_echo "53. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:114: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_infinite_loop"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_infinite_loop" "testsuite-regression.at:114"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_infinite_loop
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_53
#AT_START_54
at_fn_group_banner 54 'testsuite-regression.at:117' \
  "infinite loop (loops) - lp:941558" "              " 5
at_xfail=no
(
  $as_echo "54. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:119: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_infinite_loop"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_infinite_loop" "testsuite-regression.at:119"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_infinite_loop
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:119"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_54
#AT_START_55
at_fn_group_banner 55 'testsuite-regression.at:122' \
  "passing a constant array as an arg - lp:1032203" "" 5
at_xfail=no
(
  $as_echo "55. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:124: \$abs_top_builddir/tests/regression/test_constant_array"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/regression/test_constant_array" "testsuite-regression.at:124"
( $at_check_trace; $abs_top_builddir/tests/regression/test_constant_array
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_55
#AT_START_56
at_fn_group_banner 56 'testsuite-regression.at:127' \
  "undominated variable from conditional barrier handling (repl) - lp:1045835" "" 5
at_xfail=no
(
  $as_echo "56. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:129: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_undominated_variable"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_undominated_variable" "testsuite-regression.at:129"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_undominated_variable
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_56
#AT_START_57
at_fn_group_banner 57 'testsuite-regression.at:132' \
  "undominated variable from conditional barrier handling (loops) - lp:1045835" "" 5
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc &&\
  grep -q "define LLVM_3_1" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "57. $at_setup_line: testing $at_desc ..."
  $at_traceon


#this broke on ppc in commit 525, for LLVM 3.1

{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:137: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_undominated_variable"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_undominated_variable" "testsuite-regression.at:137"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_undominated_variable
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:137"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_57
#AT_START_58
at_fn_group_banner 58 'testsuite-regression.at:140' \
  "clSetKernelArg overwriting the previous kernel's args - lp:1075134" "" 5
at_xfail=no
(
  $as_echo "58. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:142: \$abs_top_builddir/tests/regression/test_setargs"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/regression/test_setargs" "testsuite-regression.at:142"
( $at_check_trace; $abs_top_builddir/tests/regression/test_setargs
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_58
#AT_START_59
at_fn_group_banner 59 'testsuite-regression.at:145' \
  "setting a buffer argument to NULL causes a segfault - lp:1109030" "" 5
at_xfail=no
(
  $as_echo "59. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:147: \$abs_top_builddir/tests/regression/test_null_arg"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/regression/test_null_arg" "testsuite-regression.at:147"
( $at_check_trace; $abs_top_builddir/tests/regression/test_null_arg
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:147"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_59
#AT_START_60
at_fn_group_banner 60 'testsuite-regression.at:150' \
  "sizeof(uint)" "                                   " 5
at_xfail=no
(
  $as_echo "60. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
Running test test_sizeof...
sizeof(uint) == 4
sizeof(uint2) == 8
sizeof(uint3) == 16
sizeof(uint4) == 16
sizeof(uint8) == 32
sizeof(uint16) == 64
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:162: \$abs_top_builddir/tests/kernel/kernel test_sizeof"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_sizeof" "testsuite-regression.at:162"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_sizeof
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:162"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_60
#AT_START_61
at_fn_group_banner 61 'testsuite-regression.at:165' \
  "block" "                                          " 5
at_xfail=no
(
  $as_echo "61. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
Running test test_block...
op(1)=2.000000
op(1)=2.000000
op(1)=1.000000
op(1)=2.000000
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:175: \$abs_top_builddir/tests/kernel/kernel test_block"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_block" "testsuite-regression.at:175"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_block
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:175"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_61
#AT_START_62
at_fn_group_banner 62 'testsuite-tce.at:4' \
  "A basic ttasim driver test" "                     " 6
at_xfail=no
(
  $as_echo "62. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-tce.at:6" >"$at_check_line_file"
(! grep -c "define TCE_AVAILABLE" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-tce.at:6"
{ set +x
$as_echo "$at_srcdir/testsuite-tce.at:7: make -s -C \$abs_top_builddir/tests/tce/ttasim run | egrep -v \"^make\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-tce.at:7"
( $at_check_trace; make -s -C $abs_top_builddir/tests/tce/ttasim run | egrep -v "^make"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PING23456.000000 2000001OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-tce.at:7"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_62
#AT_START_63
at_fn_group_banner 63 'testsuite-tce.at:11' \
  "Half-precision floats on ttasim" "                " 6
at_xfail=no
      grep -q "#define LLVM_3_2" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "63. $at_setup_line: testing $at_desc ..."
  $at_traceon



$as_echo "testsuite-tce.at:14" >"$at_check_line_file"
(! grep -c "define TCE_AVAILABLE" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-tce.at:14"
{ set +x
$as_echo "$at_srcdir/testsuite-tce.at:15: make -s -C \$abs_top_builddir/tests/tce/fp16 run | egrep -v \"^make\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-tce.at:15"
( $at_check_trace; make -s -C $abs_top_builddir/tests/tce/fp16 run | egrep -v "^make"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "2.500000
2.500000
2.500000
2.500000
2.500000
2.500000
2.500000
2.500000
32.000000
32.000000
32.000000
32.000000
32.000000
32.000000
32.000000
32.000000
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-tce.at:15"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_63
#AT_START_64
at_fn_group_banner 64 'testsuite-samples.at:10' \
  "Building the sources against pocl" "              " 7
at_xfail=no
(
  $as_echo "64. $at_setup_line: testing $at_desc ..."
  $at_traceon



  $as_echo "testsuite-samples.at:12" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" samples "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:12"
  # The book samples do not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-samples.at:12" >"$at_check_line_file"
(grep -q "#define BUILD_ICD" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:12"

cat >expout <<'_ATEOF'
Built target HelloWorld
Built target OpenCLInfo
Built target OpenCLConvolutionChap3
Built target HelloBinaryWorld
Built target SimpleBufferSubBuffer
Built target ImageFilter2D
Built target vecadd
Built target histogram
Built target Dijkstra
Built target spmv
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:25: sed -i 's/#include \"bmpLoader.hpp\"/\\/\\/#include \"bmpLoader.hpp/g' \\
\$abs_top_srcdir/examples/opencl-book-samples/checkout/src/Chapter_12/Sinewave/sinewave.cpp;
make -sC \$abs_top_builddir/examples/opencl-book-samples clean build 2>&1 | grep 'Built target' | cut -c8-"
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-samples.at:25"
( $at_check_trace; sed -i 's/#include "bmpLoader.hpp"/\/\/#include "bmpLoader.hpp/g' \
$abs_top_srcdir/examples/opencl-book-samples/checkout/src/Chapter_12/Sinewave/sinewave.cpp;
make -sC $abs_top_builddir/examples/opencl-book-samples clean build 2>&1 | grep 'Built target' | cut -c8-
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:25"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_64
#AT_START_65
at_fn_group_banner 65 'testsuite-samples.at:30' \
  "Run Chapter 2: Hello World" "                     " 7
at_xfail=no
(
  $as_echo "65. $at_setup_line: testing $at_desc ..."
  $at_traceon



  $as_echo "testsuite-samples.at:32" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" samples "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:32"
  # The book samples do not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-samples.at:32" >"$at_check_line_file"
(grep -q "#define BUILD_ICD" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:32"


{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:34: cd \$abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_2/HelloWorld; ./HelloWorld | grep -v \"Could not create GPU context, trying CPU\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-samples.at:34"
( $at_check_trace; cd $abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_2/HelloWorld; ./HelloWorld | grep -v "Could not create GPU context, trying CPU"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/opencl-book-samples/HelloWorld.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:34"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_65
#AT_START_66
at_fn_group_banner 66 'testsuite-samples.at:40' \
  "Run Chapter 3: OpenCLConvolution" "               " 7
at_xfail=no
(
  $as_echo "66. $at_setup_line: testing $at_desc ..."
  $at_traceon



  $as_echo "testsuite-samples.at:42" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" samples "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:42"
  # The book samples do not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-samples.at:42" >"$at_check_line_file"
(grep -q "#define BUILD_ICD" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:42"


{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:44:
cd \$abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_3/OpenCLConvolution
ln -sf \$abs_top_srcdir/examples/opencl-book-samples/checkout/src/Chapter_3/OpenCLConvolution/Convolution.cl
./OpenCLConvolutionChap3
"
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-samples.at:44"
( $at_check_trace;
cd $abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_3/OpenCLConvolution
ln -sf $abs_top_srcdir/examples/opencl-book-samples/checkout/src/Chapter_3/OpenCLConvolution/Convolution.cl
./OpenCLConvolutionChap3

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/opencl-book-samples/OpenCLConvolutionChap3.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:44"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_66
#AT_START_67
at_fn_group_banner 67 'testsuite-samples.at:54' \
  "Run Chapter 6: HelloBinaryWorld" "                " 7
at_xfail=no
(
  $as_echo "67. $at_setup_line: testing $at_desc ..."
  $at_traceon



  $as_echo "testsuite-samples.at:56" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" samples "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:56"
  # The book samples do not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-samples.at:56" >"$at_check_line_file"
(grep -q "#define BUILD_ICD" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:56"


{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:58:
cd \$abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_6/HelloBinaryWorld
rm -f HelloWorld.cl.bin
./HelloBinaryWorld | grep -v \"Could not create GPU\"
./HelloBinaryWorld | grep -v \"Could not create GPU\"
"
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-samples.at:58"
( $at_check_trace;
cd $abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_6/HelloBinaryWorld
rm -f HelloWorld.cl.bin
./HelloBinaryWorld | grep -v "Could not create GPU"
./HelloBinaryWorld | grep -v "Could not create GPU"

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/opencl-book-samples/HelloBinaryWorld.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_67
#AT_START_68
at_fn_group_banner 68 'testsuite-samples.at:69' \
  "Run Chapter 7: SimpleBufferSubBuffer" "           " 7
at_xfail=no
(
  $as_echo "68. $at_setup_line: testing $at_desc ..."
  $at_traceon



  $as_echo "testsuite-samples.at:71" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" samples "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:71"
  # The book samples do not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-samples.at:71" >"$at_check_line_file"
(grep -q "#define BUILD_ICD" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:71"


{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:73:
cd \$abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_7/SimpleBufferSubBuffer
./SimpleBufferSubBuffer --useMap | egrep -v \"_TYPE_GPU|16 17 18 19\"
"
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-samples.at:73"
( $at_check_trace;
cd $abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_7/SimpleBufferSubBuffer
./SimpleBufferSubBuffer --useMap | egrep -v "_TYPE_GPU|16 17 18 19"

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/opencl-book-samples/SimpleBufferSubBuffer.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_68
#AT_START_69
at_fn_group_banner 69 'testsuite-samples.at:82' \
  "Run Chapter 8: ImageFilter2D" "                   " 7
at_xfail=no
(
  $as_echo "69. $at_setup_line: testing $at_desc ..."
  $at_traceon



  $as_echo "testsuite-samples.at:84" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" samples "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:84"
  # The book samples do not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-samples.at:84" >"$at_check_line_file"
(grep -q "#define BUILD_ICD" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:84"

{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:85:
cd \${abs_top_srcdir}/examples/opencl-book-samples/checkout/src/Chapter_8/ImageFilter2D ;
cp \${abs_top_srcdir}/examples/opencl-book-samples/ImageFilter2D.cl ./
sed '418cclFinish(commandQueue);' -i ImageFilter2D.cpp ;
cd \${abs_top_builddir}/examples/opencl-book-samples/build/src/Chapter_8/ImageFilter2D ;
make
"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-samples.at:85"
( $at_check_trace;
cd ${abs_top_srcdir}/examples/opencl-book-samples/checkout/src/Chapter_8/ImageFilter2D ;
cp ${abs_top_srcdir}/examples/opencl-book-samples/ImageFilter2D.cl ./
sed '418cclFinish(commandQueue);' -i ImageFilter2D.cpp ;
cd ${abs_top_builddir}/examples/opencl-book-samples/build/src/Chapter_8/ImageFilter2D ;
make

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:93:
cd \$abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_8/ImageFilter2D
./ImageFilter2D \$abs_top_srcdir/examples/opencl-book-samples/checkout/src/Chapter_19/oclFlow/data/minicooper/frame10.png output.png
"
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-samples.at:93"
( $at_check_trace;
cd $abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_8/ImageFilter2D
./ImageFilter2D $abs_top_srcdir/examples/opencl-book-samples/checkout/src/Chapter_19/oclFlow/data/minicooper/frame10.png output.png

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Could not create GPU context, trying CPU...

Executed program succesfully.
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_69
#AT_START_70
at_fn_group_banner 70 'testsuite-samples.at:104' \
  "Run Chapter 12: VectorAdd (C++ bindings)" "       " 7
at_xfail=no
(
  $as_echo "70. $at_setup_line: testing $at_desc ..."
  $at_traceon



  $as_echo "testsuite-samples.at:106" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" samples "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:106"
  # The book samples do not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-samples.at:106" >"$at_check_line_file"
(grep -q "#define BUILD_ICD" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:106"


{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:108:
cd \$abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_12/VectorAdd
./vecadd
"
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-samples.at:108"
( $at_check_trace;
cd $abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_12/VectorAdd
./vecadd

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/opencl-book-samples/VectorAdd.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:108"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_70
#AT_START_71
at_fn_group_banner 71 'testsuite-viennacl.at:17' \
  "Initialize the build with cmake" "                " 8
at_xfail=no
(
  $as_echo "71. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-viennacl.at:19" >"$at_check_line_file"
(case " POAT_TESTSUITES " in #(
  *" ViennaCL "*) :
     ;; #(
  *) :
    false ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:19"
{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:20: make -sC \$abs_top_builddir/examples/ViennaCL/ build"
at_fn_check_prepare_dynamic "make -sC $abs_top_builddir/examples/ViennaCL/ build" "testsuite-viennacl.at:20"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ build
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/testsuite-viennacl.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:21: make -sC \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build kernels"
at_fn_check_prepare_dynamic "make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build kernels" "testsuite-viennacl.at:21"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build kernels
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/testsuite-viennacl.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_71
#AT_START_72
at_fn_group_banner 72 'testsuite-viennacl.at:24' \
  "fft" "                                            " 8
at_xfail=no
(
  $as_echo "72. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:24" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:24"


  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:25: make -sC \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build fft 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/' "
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:25"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build fft 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Built target fft
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:25"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:26: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/examples/tutorial/fft 2>&1| grep SUCCESS"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:26"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/examples/tutorial/fft 2>&1| grep SUCCESS
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/examples/ViennaCL/fft.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:26"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_72
#AT_START_73
at_fn_group_banner 73 'testsuite-viennacl.at:31' \
  "iterators-test" "                                 " 8
at_xfail=no
(
  $as_echo "73. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:31" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:31"


  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:32: make -sC \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build iterators-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/' "
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:32"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build iterators-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Built target iterators-test
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:33: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/iterators-test 2>&1 | grep -v \"incomplete\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:33"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/iterators-test 2>&1 | grep -v "incomplete"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/examples/ViennaCL/iterators-test.stdout)

" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:33"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_73
#AT_START_74
at_fn_group_banner 74 'testsuite-viennacl.at:39' \
  "custom-context" "                                 " 8
at_xfail=no
(
  $as_echo "74. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:39" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:39"


  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:40: make -sC \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build custom-context 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/' "
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:40"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build custom-context 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Built target custom-context
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:41: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/examples/tutorial/custom-context 2>&1 | egrep -v \"context|basic|pthread|incomplete\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:41"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/examples/tutorial/custom-context 2>&1 | egrep -v "context|basic|pthread|incomplete"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_builddir/examples/ViennaCL/custom-context.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_74
#AT_START_75
at_fn_group_banner 75 'testsuite-viennacl.at:46' \
  "matrix-test" "                                    " 8
at_xfail=no
(
  $as_echo "75. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:46" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:46"

#this fails randomly, and rarely
$as_echo "testsuite-viennacl.at:48" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:48"

  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:49: make -sC \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build matrix-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/' "
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:49"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build matrix-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Built target matrix-test
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:50: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/matrix-test 2>&1 | grep passed | grep -v \"incomplete\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:50"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/matrix-test 2>&1 | grep passed | grep -v "incomplete"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/ViennaCL/matrix-test.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_75
#AT_START_76
at_fn_group_banner 76 'testsuite-viennacl.at:55' \
  "matrix_range-test" "                              " 8
at_xfail=yes
(
  $as_echo "76. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:55" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:55"

# Known issue with the wiloops method.


  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:58: make -sC \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build matrix_range-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/' "
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:58"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build matrix_range-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Built target matrix_range-test
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:59: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/matrix_range-test 2>&1 | grep -v \"incomplete\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:59"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/matrix_range-test 2>&1 | grep -v "incomplete"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/ViennaCL/matrix_range-test.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_76
#AT_START_77
at_fn_group_banner 77 'testsuite-viennacl.at:64' \
  "scalar-test" "                                    " 8
at_xfail=no
(
  $as_echo "77. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:64" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:64"


  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:65: make -sC \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build scalar-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/' "
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:65"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build scalar-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Built target scalar-test
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:66: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/scalar-test 2>&1 | grep -v \"incomplete\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:66"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/scalar-test 2>&1 | grep -v "incomplete"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/ViennaCL/scalar-test.stdout`

" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:66"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_77
#AT_START_78
at_fn_group_banner 78 'testsuite-viennacl.at:72' \
  "sparse-test" "                                    " 8
at_xfail=no
(
  $as_echo "78. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:72" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:72"


  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:73: make -sC \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build sparse-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/' "
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:73"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build sparse-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Built target sparse-test
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:74: cd \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests; ./sparse-test 2>&1 | grep passed | grep -v \"incomplete\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:74"
( $at_check_trace; cd $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests; ./sparse-test 2>&1 | grep passed | grep -v "incomplete"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/ViennaCL/sparse-test.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_78
#AT_START_79
at_fn_group_banner 79 'testsuite-viennacl.at:79' \
  "structured-matrices-test" "                       " 8
at_xfail=yes
(
  $as_echo "79. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:79" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:79"

# The now-enabled double version fails in verification.


  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:82: make -sC \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build structured-matrices-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/' "
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:82"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build structured-matrices-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Built target structured-matrices-test
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:83: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/structured-matrices-test 2>&1 | grep -v \"incomplete\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:83"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/structured-matrices-test 2>&1 | grep -v "incomplete"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/ViennaCL/structured-matrices-test.stdout`

" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:83"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_79
#AT_START_80
at_fn_group_banner 80 'testsuite-viennacl.at:89' \
  "vectorbench" "                                    " 8
at_xfail=no
(
  $as_echo "80. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:89" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:89"


  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:90: make -sC \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build vectorbench 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/' "
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:90"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build vectorbench 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Built target vectorbench
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:90"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:91: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/examples/benchmarks/vectorbench 2>&1 | grep Vector"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:91"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/examples/benchmarks/vectorbench 2>&1 | grep Vector
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/ViennaCL/vectorbench.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_80
#AT_START_81
at_fn_group_banner 81 'testsuite-viennacl.at:96' \
  "vector-test" "                                    " 8
at_xfail=yes
(
  $as_echo "81. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:96" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:96"



  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:98: make -sC \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build vector-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/' "
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:98"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build vector-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Built target vector-test
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:98"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:99: cd \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/; ./vector-test"
at_fn_check_prepare_dynamic "cd $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/; ./vector-test" "testsuite-viennacl.at:99"
( $at_check_trace; cd $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/; ./vector-test
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/ViennaCL/vector-test.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:99"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_81
#AT_START_82
at_fn_group_banner 82 'testsuite-viennacl.at:104' \
  "vector_range-test" "                              " 8
at_xfail=yes
(
  $as_echo "82. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:104" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:104"



  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:106: make -sC \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build vector_range-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/' "
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:106"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build vector_range-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Built target vector_range-test
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:107: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/vector_range-test 2>&1 | grep -v \"incomplete\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:107"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/vector_range-test 2>&1 | grep -v "incomplete"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/ViennaCL/vector_range-test.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:107"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_82
#AT_START_83
at_fn_group_banner 83 'testsuite-viennacl.at:112' \
  "blas1" "                                          " 8
at_xfail=no
(
  $as_echo "83. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:112" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:112"


  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:113: make -sC \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build blas1 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/' "
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:113"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build blas1 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Built target blas1
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:114: POCL_DEVICES=basic \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/examples/tutorial/blas1 2>&1 | grep -v \"incomplete\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:114"
( $at_check_trace; POCL_DEVICES=basic $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/examples/tutorial/blas1 2>&1 | grep -v "incomplete"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/ViennaCL/blas1.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_83
#AT_START_84
at_fn_group_banner 84 'testsuite-viennacl.at:119' \
  "blas3" "                                          " 8
at_xfail=yes
(
  $as_echo "84. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:119" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:119"



  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:121: make -sC \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build blas3-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/' "
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:121"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build blas3-test 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Built target blas3-test
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:122: POCL_WORK_GROUP_METHOD=loops POCL_WILOOPS_MAX_UNROLL_COUNT=1 \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/blas3-test 2>&1 | grep passed | grep -v \"incomplete\" | wc -l"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:122"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loops POCL_WILOOPS_MAX_UNROLL_COUNT=1 $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/tests/blas3-test 2>&1 | grep passed | grep -v "incomplete" | wc -l
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "121
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_84
#AT_START_85
at_fn_group_banner 85 'testsuite-viennacl.at:127' \
  "openclbench" "                                    " 8
at_xfail=no
(
  $as_echo "85. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:127" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:127"


  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:128: make -sC \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build openclbench 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/' "
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:128"
( $at_check_trace; make -sC $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build openclbench 2>&1 | grep 'Built target' | sed -e 's/^.*Built/Built/'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Built target openclbench
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:128"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:129: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/examples/benchmarks/openclbench 2>&1| grep \"Result of operation\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:129"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.3.1-src/build/examples/benchmarks/openclbench 2>&1| grep "Result of operation"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Result of operation on host: 104839
Result of operation via OpenCL: 104839
Result of operation on host: 105171
Result of operation via OpenCL: 105171
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_85
#AT_START_86
at_fn_group_banner 86 'testsuite-runtime.at:4' \
  "Host runtime tests" "                             " 9
at_xfail=no
(
  $as_echo "86. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-runtime.at:6: \$abs_top_builddir/tests/runtime/test_clGetDeviceInfo"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/runtime/test_clGetDeviceInfo" "testsuite-runtime.at:6"
( $at_check_trace; $abs_top_builddir/tests/runtime/test_clGetDeviceInfo
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-runtime.at:6"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/testsuite-runtime.at:7: \$abs_top_builddir/tests/runtime/test_clGetEventInfo"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/runtime/test_clGetEventInfo" "testsuite-runtime.at:7"
( $at_check_trace; $abs_top_builddir/tests/runtime/test_clGetEventInfo
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-runtime.at:7"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/testsuite-runtime.at:8: \$abs_top_builddir/tests/runtime/test_clCreateProgramWithBinary"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/runtime/test_clCreateProgramWithBinary" "testsuite-runtime.at:8"
( $at_check_trace; $abs_top_builddir/tests/runtime/test_clCreateProgramWithBinary
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-runtime.at:8"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_86
#AT_START_87
at_fn_group_banner 87 'testsuite-rodinia.at:19' \
  "backprop" "                                       " 10
at_xfail=no
(
  $as_echo "87. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:19" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:19"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:19" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:19"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:20: make build-backprop -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  | egrep -v \"^backprop_ocl.cpp:\" "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:20"
( $at_check_trace; make build-backprop -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"  | egrep -v "^backprop_ocl.cpp:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia backprop]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:21: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/backprop; POCL_VECTORIZE_WORK_GROUPS=0  ./run | grep ."
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-rodinia.at:21"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/backprop; POCL_VECTORIZE_WORK_GROUPS=0  ./run | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Random number generator seed: 7
Input layer size : 65536
Starting training kernel
num_devices = 1
Performing GPU computation
Finish the training for one iteration
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_87
#AT_START_88
at_fn_group_banner 88 'testsuite-rodinia.at:31' \
  "bfs" "                                            " 10
at_xfail=no
(
  $as_echo "88. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:31" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:31"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:31" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:31"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:32: make build-bfs -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  | egrep -v \"^CLHelper.h:|^In file included from bfs.cpp:\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:32"
( $at_check_trace; make build-bfs -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"  | egrep -v "^CLHelper.h:|^In file included from bfs.cpp:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia bfs]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:33: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/bfs; ./run 2>&1|grep -v \"incomplete\" | grep -v \"argument unused\" | grep ."
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-rodinia.at:33"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/bfs; ./run 2>&1|grep -v "incomplete" | grep -v "argument unused" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Reading File
--cambine:passed:-)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:33"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_88
#AT_START_89
at_fn_group_banner 89 'testsuite-rodinia.at:39' \
  "cfd" "                                            " 10
at_xfail=no
(
  $as_echo "89. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:39" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:39"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:39" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:39"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:40: make build-cfd -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\" | egrep -v \"^euler3d.cpp:\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:40"
( $at_check_trace; make build-cfd -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make" | egrep -v "^euler3d.cpp:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia cfd]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:41: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/cfd; ./run 2>&1| grep . | egrep -v \"incomplete|device.name\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-rodinia.at:41"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/cfd; ./run 2>&1| grep . | egrep -v "incomplete|device.name"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "--cambine: nel=97046, nelr=97152
Starting...
Saving solution...
Saved solution...
Cleaning up...
Done...
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_89
#AT_START_90
at_fn_group_banner 90 'testsuite-rodinia.at:51' \
  "lud" "                                            " 10
at_xfail=no
(
  $as_echo "90. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:51" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:51"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:51" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:51"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:52: make build-lud -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  | egrep -v \"^lud.cpp:|^../common/common.c:\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:52"
( $at_check_trace; make build-lud -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"  | egrep -v "^lud.cpp:|^../common/common.c:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia lud]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:53: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/lud/ocl; POCL_VECTORIZE_WORK_GROUPS=0 ./run | grep \"Time con\" | cut -c -18 | grep ."
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-rodinia.at:53"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/lud/ocl; POCL_VECTORIZE_WORK_GROUPS=0 ./run | grep "Time con" | cut -c -18 | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Time consumed(ms):
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:53"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_90
#AT_START_91
at_fn_group_banner 91 'testsuite-rodinia.at:58' \
  "hotspot" "                                        " 10
at_xfail=no
(
  $as_echo "91. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:58" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:58"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:58" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:58"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:59: make build-hotspot -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:59"
( $at_check_trace; make build-hotspot -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia hotspot]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:60: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/hotspot; ./run | grep \"time\" | cut -d ' ' -f1 | grep ."
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-rodinia.at:60"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/hotspot; ./run | grep "time" | cut -d ' ' -f1 | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Kernel
Total
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:60"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_91
#AT_START_92
at_fn_group_banner 92 'testsuite-rodinia.at:66' \
  "kmeans" "                                         " 10
at_xfail=no
(
  $as_echo "92. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:66" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:66"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:66" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:66"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:67: make build-kmeans -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  | egrep -v \"^kmeans.cpp:|^read_input.c:\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:67"
( $at_check_trace; make build-kmeans -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"  | egrep -v "^kmeans.cpp:|^read_input.c:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia kmeans]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:67"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:68: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/kmeans; ./run | grep \"Number of\" | grep ."
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-rodinia.at:68"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/kmeans; ./run | grep "Number of" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Number of objects: 494020
Number of features: 34
Number of Iteration: 1
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_92
#AT_START_93
at_fn_group_banner 93 'testsuite-rodinia.at:75' \
  "lavaMD" "                                         " 10
at_xfail=no
(
  $as_echo "93. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:75" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:75"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:75" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:75"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:76: make build-lavaMD -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  | egrep -v \"^./kernel/kernel_gpu_opencl_wrapper.c:|^rm:\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:76"
( $at_check_trace; make build-lavaMD -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"  | egrep -v "^./kernel/kernel_gpu_opencl_wrapper.c:|^rm:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia lavaMD]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:76"
$at_failed && at_fn_log_failure
$at_traceon; }


# This test case uses struct kernel arguments which current do not
# work correctly due to assuming the ABI maps variables 1:1 to kernel
# arguments and at least AMD64 seems to sometimes split the struct
# arguments to multiple scalar arguments. This (falsely) passes with
# the pthread device and crashes with the basic device.
$as_echo "testsuite-rodinia.at:82" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:82"
{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:83: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/lavaMD; ./run | grep \"Total time:\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-rodinia.at:83"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/lavaMD; ./run | grep "Total time:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Total time:
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:83"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_93
#AT_START_94
at_fn_group_banner 94 'testsuite-rodinia.at:88' \
  "pathfinder" "                                     " 10
at_xfail=no
(
  $as_echo "94. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:88" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:88"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:88" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:88"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:89: make build-pathfinder -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  | egrep -v \"^OpenCL.cpp:\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:89"
( $at_check_trace; make build-pathfinder -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"  | egrep -v "^OpenCL.cpp:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia pathfinder]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:89"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:90: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/pathfinder; \\
POCL_MAX_WORK_GROUP_SIZE=2 ./run 2>&1 | grep -v \"pocl warning:\" ; \\
cat result.txt 2>&1 | egrep -v \"DEVICE_|PROFILE|VERSION|NAME|EXTENSIONS\" | grep ."
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-rodinia.at:90"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/pathfinder; \
POCL_MAX_WORK_GROUP_SIZE=2 ./run 2>&1 | grep -v "pocl warning:" ; \
cat result.txt 2>&1 | egrep -v "DEVICE_|PROFILE|VERSION|NAME|EXTENSIONS" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/examples/Rodinia/pathfinder.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:90"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_94
#AT_START_95
at_fn_group_banner 95 'testsuite-rodinia.at:97' \
  "srad" "                                           " 10
at_xfail=no
(
  $as_echo "95. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:97" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:97"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:97" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_srcdir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:97"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:98: make build-srad -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  | egrep -v \"^main.cpp:\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:98"
( $at_check_trace; make build-srad -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"  | egrep -v "^main.cpp:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia srad]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:98"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:99: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/srad; \\
POCL_MAX_WORK_GROUP_SIZE=2 ./run 2>&1 | grep \"Total time\" | grep ."
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-rodinia.at:99"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/srad; \
POCL_MAX_WORK_GROUP_SIZE=2 ./run 2>&1 | grep "Total time" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Total time:
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:99"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_95
#AT_START_96
at_fn_group_banner 96 'testsuite-parboil.at:17' \
  "spmv" "                                           " 11
at_xfail=no
      grep -q "#define HAVE_OCL_ICD 1" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "96. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:17" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:17"

#This fails when pocl has ICD enabled.


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:20: make build-spmv -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:20"
( $at_check_trace; make build-spmv -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:21: make run-spmv -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:21"
( $at_check_trace; make run-spmv -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_96
#AT_START_97
at_fn_group_banner 97 'testsuite-parboil.at:26' \
  "stencil" "                                        " 11
at_xfail=no
(
  $as_echo "97. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:26" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:26"


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:27: make build-stencil -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:27"
( $at_check_trace; make build-stencil -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:27"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:28: make run-stencil -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:28"
( $at_check_trace; make run-stencil -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:28"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_97
#AT_START_98
at_fn_group_banner 98 'testsuite-parboil.at:33' \
  "tpacf" "                                          " 11
at_xfail=yes
(
  $as_echo "98. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:33" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:33"

# This probably is in infinite loop with wiloops.
$as_echo "testsuite-parboil.at:35" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:35"

  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:36: make build-tpacf -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:36"
( $at_check_trace; make build-tpacf -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:36"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:37: make run-tpacf -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:37"
( $at_check_trace; make run-tpacf -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

# Result verification error.

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_98
#AT_START_99
at_fn_group_banner 99 'testsuite-parboil.at:44' \
  "cutcp" "                                          " 11
at_xfail=no
(
  $as_echo "99. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:44" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:44"


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:45: make build-cutcp -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:45"
( $at_check_trace; make build-cutcp -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:45"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:46: make run-cutcp -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:46"
( $at_check_trace; make run-cutcp -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:46"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_99
#AT_START_100
at_fn_group_banner 100 'testsuite-parboil.at:51' \
  "mri-gridding" "                                   " 11
at_xfail=no
(
  $as_echo "100. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:51" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:51"

# Takes forever to compile with the repl method.
# Also tries to create an illegal work group size and has potentially
# erroneous kernels?
$as_echo "testsuite-parboil.at:55" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:55"

  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:56: make build-mri-gridding -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:56"
( $at_check_trace; make build-mri-gridding -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:57: make run-mri-gridding -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:57"
( $at_check_trace; make run-mri-gridding -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

#AT_XFAIL_IF(true)
  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_100
#AT_START_101
at_fn_group_banner 101 'testsuite-parboil.at:63' \
  "sad" "                                            " 11
at_xfail=yes
(
  $as_echo "101. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:63" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:63"


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:64: make build-sad -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:64"
( $at_check_trace; make build-sad -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:65: make run-sad -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:65"
( $at_check_trace; make run-sad -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

# Requires read_imageui

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_101
#AT_START_102
at_fn_group_banner 102 'testsuite-parboil.at:72' \
  "bfs" "                                            " 11
at_xfail=no
(
  $as_echo "102. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:72" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:72"


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:73: make build-bfs -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:73"
( $at_check_trace; make build-bfs -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:74: make run-bfs -sC \$abs_top_builddir/examples/Parboil 2>&1 | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:74"
( $at_check_trace; make run-bfs -sC $abs_top_builddir/examples/Parboil 2>&1 | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_102
#AT_START_103
at_fn_group_banner 103 'testsuite-parboil.at:79' \
  "histo" "                                          " 11
at_xfail=yes
(
  $as_echo "103. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:79" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:79"

# Illegal kernels with array parameters to functions.
$as_echo "testsuite-parboil.at:81" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:81"

  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:82: make build-histo -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:82"
( $at_check_trace; make build-histo -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:83: make run-histo -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:83"
( $at_check_trace; make run-histo -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:83"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_103
#AT_START_104
at_fn_group_banner 104 'testsuite-parboil.at:88' \
  "sgemm" "                                          " 11
at_xfail=no
(
  $as_echo "104. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:88" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:88"


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:89: make build-sgemm -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:89"
( $at_check_trace; make build-sgemm -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:89"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:90: make run-sgemm -sC \$abs_top_builddir/examples/Parboil 2>&1| grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:90"
( $at_check_trace; make run-sgemm -sC $abs_top_builddir/examples/Parboil 2>&1| grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:90"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_104
#AT_START_105
at_fn_group_banner 105 'testsuite-parboil.at:95' \
  "mri-q" "                                          " 11
at_xfail=no
(
  $as_echo "105. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:95" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:95"


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:96: make build-mri-q -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:96"
( $at_check_trace; make build-mri-q -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:96"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:97: make run-mri-q -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:97"
( $at_check_trace; make run-mri-q -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_105
#AT_START_106
at_fn_group_banner 106 'testsuite-parboil.at:102' \
  "lbm" "                                            " 11
at_xfail=no
(
  $as_echo "106. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:102" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:102"


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:103: make build-lbm -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:103"
( $at_check_trace; make build-lbm -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:103"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:104: make run-lbm -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:104"
( $at_check_trace; make run-lbm -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

#AT_XFAIL_IF(true)
  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_106
#AT_START_107
at_fn_group_banner 107 'testsuite-amd.at:11' \
  "aesencryptdecrypt-repl" "                         " 12
at_xfail=no
(
  $as_echo "107. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:11" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:11"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:11" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:11"

#This fails, and on LLVM 3.3 it takes more than an hour (on modest PPC hardware) to detect it.
$as_echo "testsuite-amd.at:13" >"$at_check_line_file"
(grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:13"
{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:14: POCL_WORK_GROUP_METHOD=repl make test_AESEncryptDecrypt -sC \$abs_top_builddir/examples/AMD | grep \"Encryption Passed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:14"
( $at_check_trace; POCL_WORK_GROUP_METHOD=repl make test_AESEncryptDecrypt -sC $abs_top_builddir/examples/AMD | grep "Encryption Passed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Encryption Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:14"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_107
#AT_START_108
at_fn_group_banner 108 'testsuite-amd.at:19' \
  "aesencryptdecrypt-loops" "                        " 12
at_xfail=no
(
  $as_echo "108. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:19" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:19"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:19" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:19"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:20: POCL_WORK_GROUP_METHOD=loops make test_AESEncryptDecrypt -sC \$abs_top_builddir/examples/AMD | grep \"Encryption Passed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:20"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loops make test_AESEncryptDecrypt -sC $abs_top_builddir/examples/AMD | grep "Encryption Passed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Encryption Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_108
#AT_START_109
at_fn_group_banner 109 'testsuite-amd.at:25' \
  "atomiccounters" "                                 " 12
at_xfail=yes
(
  $as_echo "109. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:25" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:25"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:25" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:25"

# Expected Error: Device does not support cl_ext_atomic_counters_32 extension!

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:28: make test_AtomicCounters -sC \$abs_top_builddir/examples/AMD | grep \"Encryption Passed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:28"
( $at_check_trace; make test_AtomicCounters -sC $abs_top_builddir/examples/AMD | grep "Encryption Passed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Encryption Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:28"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_109
#AT_START_110
at_fn_group_banner 110 'testsuite-amd.at:33' \
  "bitonicsort" "                                    " 12
at_xfail=no
(
  $as_echo "110. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:33" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:33"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:33" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:33"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:34: make test_BitonicSort -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:34"
( $at_check_trace; make test_BitonicSort -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:34"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_110
#AT_START_111
at_fn_group_banner 111 'testsuite-amd.at:39' \
  "binarysearch" "                                   " 12
at_xfail=no
(
  $as_echo "111. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:39" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:39"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:39" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:39"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:40: make test_BinarySearch -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:40"
( $at_check_trace; make test_BinarySearch -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_111
#AT_START_112
at_fn_group_banner 112 'testsuite-amd.at:45' \
  "binomialoption-repl" "                            " 12
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc &&
             grep -q "define LLVM_3_2" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "112. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:45" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:45"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:45" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:45"


{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:48: POCL_WORK_GROUP_METHOD=repl make test_BinomialOption -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:48"
( $at_check_trace; POCL_WORK_GROUP_METHOD=repl make test_BinomialOption -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_112
#AT_START_113
at_fn_group_banner 113 'testsuite-amd.at:53' \
  "binomialoption-loops" "                           " 12
at_xfail=no
(
  $as_echo "113. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:53" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:53"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:53" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:53"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:54: POCL_WORK_GROUP_METHOD=loops make test_BinomialOption -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:54"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loops make test_BinomialOption -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_113
#AT_START_114
at_fn_group_banner 114 'testsuite-amd.at:59' \
  "blackscholes" "                                   " 12
at_xfail=no
(
  $as_echo "114. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:59" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:59"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:59" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:59"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:60: make test_BlackScholes -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:60"
( $at_check_trace; make test_BlackScholes -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:60"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_114
#AT_START_115
at_fn_group_banner 115 'testsuite-amd.at:65' \
  "blackscholesdp" "                                 " 12
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc && at_xfail=yes
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q armv && at_xfail=yes
(
  $as_echo "115. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:65" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:65"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:65" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:65"


#this causes assert on LLVM 3.1
$as_echo "testsuite-amd.at:68" >"$at_check_line_file"
( grep "#define LLVM_3_1" $abs_top_srcdir/config.h ) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:68"


{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:71: make test_BlackScholesDP -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:71"
( $at_check_trace; make test_BlackScholesDP -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:71"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_115
#AT_START_116
at_fn_group_banner 116 'testsuite-amd.at:76' \
  "boxfilter" "                                      " 12
at_xfail=no
(
  $as_echo "116. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:76" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:76"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:76" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:76"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:77: make test_BoxFilter -sC \$abs_top_builddir/examples/AMD | egrep \"Passed|failed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:77"
( $at_check_trace; make test_BoxFilter -sC $abs_top_builddir/examples/AMD | egrep "Passed|failed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
Verifying results...Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:77"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_116
#AT_START_117
at_fn_group_banner 117 'testsuite-amd.at:83' \
  "dct" "                                            " 12
at_xfail=no
(
  $as_echo "117. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:83" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:83"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:83" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:83"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:84: make test_DCT -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:84"
( $at_check_trace; make test_DCT -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_117
#AT_START_118
at_fn_group_banner 118 'testsuite-amd.at:89' \
  "devicefission" "                                  " 12
at_xfail=yes
(
  $as_echo "118. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:89" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:89"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:89" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:89"

# Error: clGetDeviceInfo failed. (maxSubDevices) Error code : CL_INVALID_VALUE

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:92: make test_DeviceFission -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:92"
( $at_check_trace; make test_DeviceFission -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:92"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_118
#AT_START_119
at_fn_group_banner 119 'testsuite-amd.at:97' \
  "dwthaar1d" "                                      " 12
at_xfail=yes
(
  $as_echo "119. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:97" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:97"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:97" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:97"

# Failed (verification error).

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:100: make test_DwtHaar1D -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:100"
( $at_check_trace; make test_DwtHaar1D -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:100"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_119
#AT_START_120
at_fn_group_banner 120 'testsuite-amd.at:105' \
  "fastwalshtransform" "                             " 12
at_xfail=no
(
  $as_echo "120. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:105" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:105"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:105" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:105"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:106: make test_FastWalshTransform -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:106"
( $at_check_trace; make test_FastWalshTransform -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_120
#AT_START_121
at_fn_group_banner 121 'testsuite-amd.at:111' \
  "floydwarshall" "                                  " 12
at_xfail=no
(
  $as_echo "121. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:111" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:111"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:111" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:111"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:112: make test_FloydWarshall -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:112"
( $at_check_trace; make test_FloydWarshall -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_121
#AT_START_122
at_fn_group_banner 122 'testsuite-amd.at:117' \
  "fluidsimulation2d" "                              " 12
at_xfail=yes
(
  $as_echo "122. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:117" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:117"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:117" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:117"

# error: can't convert between vector values of different size ('uint' (aka 'unsigned int') and 'int8')
# It should be a legal implicit conversion according to 6.3 Operators. Some other error makes it
# break with Intel OCL also.


{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:123: make test_FluidSimulation2D -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:123"
( $at_check_trace; make test_FluidSimulation2D -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:123"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_122
#AT_START_123
at_fn_group_banner 123 'testsuite-amd.at:128' \
  "helloworld" "                                     " 12
at_xfail=no
(
  $as_echo "123. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:128" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:128"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:128" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:128"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:129: make test_HelloWorld -sC \$abs_top_builddir/examples/AMD | egrep \"GdkknVnqkc|HelloWorld\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:129"
( $at_check_trace; make test_HelloWorld -sC $abs_top_builddir/examples/AMD | egrep "GdkknVnqkc|HelloWorld"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "GdkknVnqkc
HelloWorld
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_123
#AT_START_124
at_fn_group_banner 124 'testsuite-amd.at:135' \
  "histogram-repl" "                                 " 12
at_xfail=no
(
  $as_echo "124. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:135" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:135"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:135" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:135"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:136: POCL_WORK_GROUP_METHOD=repl make test_Histogram -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:136"
( $at_check_trace; POCL_WORK_GROUP_METHOD=repl make test_Histogram -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:136"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_124
#AT_START_125
at_fn_group_banner 125 'testsuite-amd.at:141' \
  "histogram-loops" "                                " 12
at_xfail=no
(
  $as_echo "125. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:141" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:141"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:141" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:141"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:142: POCL_WORK_GROUP_METHOD=loops make test_Histogram -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:142"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loops make test_Histogram -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_125
#AT_START_126
at_fn_group_banner 126 'testsuite-amd.at:147' \
  "imageoverlap" "                                   " 12
at_xfail=yes
(
  $as_echo "126. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:147" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:147"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:147" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:147"

# pocl error: encountered unimplemented part of the OpenCL specs in clCreateImage2D.c:119

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:150: make test_ImageOverlap -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:150"
( $at_check_trace; make test_ImageOverlap -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:150"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_126
#AT_START_127
at_fn_group_banner 127 'testsuite-amd.at:155' \
  "ludecomposition" "                                " 12
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc && at_xfail=yes
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q armv && at_xfail=yes
(
  $as_echo "127. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:155" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:155"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:155" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:155"


#test uses doubles


{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:160: make test_LUDecomposition -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:160"
( $at_check_trace; make test_LUDecomposition -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:160"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_127
#AT_START_128
at_fn_group_banner 128 'testsuite-amd.at:165' \
  "mandelbrot" "                                     " 12
at_xfail=no
(
  $as_echo "128. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:165" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:165"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:165" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:165"

$as_echo "testsuite-amd.at:166" >"$at_check_line_file"
( grep "undef HAVE_GLEW" $abs_top_srcdir/config.h ) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:166"
# undefined symbol: _Z7std_fmaDv4_fS_S_ with VML
{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:168: make test_Mandelbrot -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:168"
( $at_check_trace; make test_Mandelbrot -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:168"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_128
#AT_START_129
at_fn_group_banner 129 'testsuite-amd.at:173' \
  "matrixmul" "                                      " 12
at_xfail=no
(
  $as_echo "129. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:173" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:173"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:173" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:173"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:174: make test_MatrixMultiplication -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:174"
( $at_check_trace; make test_MatrixMultiplication -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:174"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_129
#AT_START_130
at_fn_group_banner 130 'testsuite-amd.at:179' \
  "matrixmulimage" "                                 " 12
at_xfail=yes
(
  $as_echo "130. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:179" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:179"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:179" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:179"

# pocl error: encountered unimplemented part of the OpenCL specs in clCreateImage2D.c:119

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:182: make test_MatrixMulImage -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:182"
( $at_check_trace; make test_MatrixMulImage -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:182"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_130
#AT_START_131
at_fn_group_banner 131 'testsuite-amd.at:187' \
  "matrixtranspose" "                                " 12
at_xfail=no
(
  $as_echo "131. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:187" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:187"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:187" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:187"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:188: make test_MatrixTranspose -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:188"
( $at_check_trace; make test_MatrixTranspose -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:188"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_131
#AT_START_132
at_fn_group_banner 132 'testsuite-amd.at:193' \
  "memorymodel-repl" "                               " 12
at_xfail=no
(
  $as_echo "132. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:193" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:193"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:193" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:193"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:194: POCL_WORK_GROUP_METHOD=repl make test_MemoryModel -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:194"
( $at_check_trace; POCL_WORK_GROUP_METHOD=repl make test_MemoryModel -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:194"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_132
#AT_START_133
at_fn_group_banner 133 'testsuite-amd.at:199' \
  "memorymodel-loops" "                              " 12
at_xfail=no
(
  $as_echo "133. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:199" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:199"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:199" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:199"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:200: POCL_WORK_GROUP_METHOD=loops make test_MemoryModel -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:200"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loops make test_MemoryModel -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:200"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_133
#AT_START_134
at_fn_group_banner 134 'testsuite-amd.at:205' \
  "montecarloasian" "                                " 12
at_xfail=yes
(
  $as_echo "134. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:205" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:205"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:205" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:205"

# kernel compilation fails due to
# error: can't convert between vector values of different size ('float4' and 'int')
# It should be a legal implicit conversion according to 6.3 Operators. Works also with Intel OCL

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:210: make test_MonteCarloAsian -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:210"
( $at_check_trace; make test_MonteCarloAsian -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:210"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_134
#AT_START_135
at_fn_group_banner 135 'testsuite-amd.at:215' \
  "montecarloasiandp" "                              " 12
at_xfail=yes
(
  $as_echo "135. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:215" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:215"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:215" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:215"


# error: can't convert between vector values of different size ('double4' and 'int')
# It should be a legal implicit conversion according to 6.3 Operators. Works also with Intel OCL

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:220: make test_MonteCarloAsianDP -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:220"
( $at_check_trace; make test_MonteCarloAsianDP -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:220"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_135
#AT_START_136
at_fn_group_banner 136 'testsuite-amd.at:225' \
  "nbody" "                                          " 12
at_xfail=no
(
  $as_echo "136. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:225" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:225"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:225" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:225"

$as_echo "testsuite-amd.at:226" >"$at_check_line_file"
( grep "undef HAVE_GLEW" $abs_top_srcdir/config.h ) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:226"
{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:227: make test_NBody -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:227"
( $at_check_trace; make test_NBody -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:227"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_136
#AT_START_137
at_fn_group_banner 137 'testsuite-amd.at:232' \
  "prefixsum" "                                      " 12
at_xfail=no
(
  $as_echo "137. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:232" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:232"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:232" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:232"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:233: make test_PrefixSum -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:233"
( $at_check_trace; make test_PrefixSum -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:233"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_137
#AT_START_138
at_fn_group_banner 138 'testsuite-amd.at:238' \
  "quasirandomsequence" "                            " 12
at_xfail=no
(
  $as_echo "138. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:238" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:238"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:238" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:238"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:239: make test_QuasiRandomSequence -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:239"
( $at_check_trace; make test_QuasiRandomSequence -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:239"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_138
#AT_START_139
at_fn_group_banner 139 'testsuite-amd.at:244' \
  "radixsort" "                                      " 12
at_xfail=no
(
  $as_echo "139. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:244" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:244"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:244" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:244"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:245: make test_RadixSort -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:245"
( $at_check_trace; make test_RadixSort -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:245"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_139
#AT_START_140
at_fn_group_banner 140 'testsuite-amd.at:250' \
  "recursivegaussian" "                              " 12
at_xfail=no
(
  $as_echo "140. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:250" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:250"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:250" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:250"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:251: make test_RecursiveGaussian -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:251"
( $at_check_trace; make test_RecursiveGaussian -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:251"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_140
#AT_START_141
at_fn_group_banner 141 'testsuite-amd.at:256' \
  "reduction" "                                      " 12
at_xfail=no
(
  $as_echo "141. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:256" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:256"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:256" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:256"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:257: make test_Reduction -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:257"
( $at_check_trace; make test_Reduction -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:257"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_141
#AT_START_142
at_fn_group_banner 142 'testsuite-amd.at:262' \
  "scanlargearrays" "                                " 12
at_xfail=no
(
  $as_echo "142. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:262" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:262"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:262" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:262"

# Fails with vectorization. With wiloops and no unrolling, the vectorization won't apply.
{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:264: POCL_VECTORIZE_WORK_GROUPS=1 make test_ScanLargeArrays -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:264"
( $at_check_trace; POCL_VECTORIZE_WORK_GROUPS=1 make test_ScanLargeArrays -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:264"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_142
#AT_START_143
at_fn_group_banner 143 'testsuite-amd.at:269' \
  "simpleconvolution" "                              " 12
at_xfail=no
(
  $as_echo "143. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:269" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:269"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:269" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:269"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:270: make test_SimpleConvolution -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:270"
( $at_check_trace; make test_SimpleConvolution -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:270"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_143
#AT_START_144
at_fn_group_banner 144 'testsuite-amd.at:275' \
  "simpleimage" "                                    " 12
at_xfail=yes
(
  $as_echo "144. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:275" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:275"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:275" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:275"

# pocl error: encountered unimplemented part of the OpenCL specs in clCreateImage2D.c:119

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:278: make test_SimpleImage -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:278"
( $at_check_trace; make test_SimpleImage -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:278"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_144
#AT_START_145
at_fn_group_banner 145 'testsuite-amd.at:283' \
  "sobelfilter" "                                    " 12
at_xfail=no
(
  $as_echo "145. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:283" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:283"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:283" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:283"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:284: make test_SobelFilter -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:284"
( $at_check_trace; make test_SobelFilter -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:284"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_145
#AT_START_146
at_fn_group_banner 146 'testsuite-amd.at:289' \
  "template" "                                       " 12
at_xfail=no
(
  $as_echo "146. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:289" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:289"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:289" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:289"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:290: make test_Template -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:290"
( $at_check_trace; make test_Template -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:290"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_146
#AT_START_147
at_fn_group_banner 147 'testsuite-amd.at:295' \
  "templatec" "                                      " 12
at_xfail=no
(
  $as_echo "147. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:295" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:295"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:295" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:295"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:296: make test_TemplateC -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:296"
( $at_check_trace; make test_TemplateC -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:296"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_147
#AT_START_148
at_fn_group_banner 148 'testsuite-amd.at:301' \
  "transferoverlap" "                                " 12
at_xfail=yes
(
  $as_echo "148. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:301" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:301"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:301" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:301"

# Expected Error: Device does not support cl_khr_local_int32_base_atomics extension!

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:304: make test_TransferOverlap -sC \$abs_top_builddir/examples/AMD | grep \"Passed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:304"
( $at_check_trace; make test_TransferOverlap -sC $abs_top_builddir/examples/AMD | grep "Passed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:304"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_148
#AT_START_149
at_fn_group_banner 149 'testsuite-amd.at:309' \
  "urng" "                                           " 12
at_xfail=no
(
  $as_echo "149. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:309" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:309"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:309" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:309"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:310: make test_URNG -sC \$abs_top_builddir/examples/AMD | grep Passed | cut -c -7"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:310"
( $at_check_trace; make test_URNG -sC $abs_top_builddir/examples/AMD | grep Passed | cut -c -7
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:310"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_149
#AT_START_150
at_fn_group_banner 150 'testsuite-vexcl.at:10' \
  "fft" "                                            " 13
at_xfail=no
(
  $as_echo "150. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:10" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:10"

# Warnings ignored:
# clang: warning: argument unused during compilation: '-cl-mad-enable'
# clang: warning: argument unused during compilation: '-cl-fast-relaxed-math'
{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:14: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./fft 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:14"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./fft 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:14"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_150
#AT_START_151
at_fn_group_banner 151 'testsuite-vexcl.at:19' \
  "generator" "                                      " 13
at_xfail=no
(
  $as_echo "151. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:19" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:19"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:20: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./generator 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:20"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./generator 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_151
#AT_START_152
at_fn_group_banner 152 'testsuite-vexcl.at:25' \
  "multiple_objects" "                               " 13
at_xfail=no
(
  $as_echo "152. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:25" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:25"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:26: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./multiple_objects 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:26"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./multiple_objects 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:26"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_152
#AT_START_153
at_fn_group_banner 153 'testsuite-vexcl.at:31' \
  "multivector_arithmetics" "                        " 13
at_xfail=no
(
  $as_echo "153. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:31" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:31"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:32: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./multivector_arithmetics 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:32"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./multivector_arithmetics 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_153
#AT_START_154
at_fn_group_banner 154 'testsuite-vexcl.at:37' \
  "multivector_create" "                             " 13
at_xfail=no
(
  $as_echo "154. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:37" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:37"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:38: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./multivector_create 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:38"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./multivector_create 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_154
#AT_START_155
at_fn_group_banner 155 'testsuite-vexcl.at:43' \
  "random" "                                         " 13
at_xfail=no
(
  $as_echo "155. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:43" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:43"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:44: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./random 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:44"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./random 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:44"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_155
#AT_START_156
at_fn_group_banner 156 'testsuite-vexcl.at:49' \
  "spmv" "                                           " 13
at_xfail=no
(
  $as_echo "156. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:49" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:49"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:50: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./spmv 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:50"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./spmv 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_156
#AT_START_157
at_fn_group_banner 157 'testsuite-vexcl.at:55' \
  "stencil" "                                        " 13
at_xfail=yes
(
  $as_echo "157. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:55" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:55"

# Crash.

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:58: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./stencil 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:58"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./stencil 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_157
#AT_START_158
at_fn_group_banner 158 'testsuite-vexcl.at:63' \
  "vector_arithmetics" "                             " 13
at_xfail=no
(
  $as_echo "158. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:63" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:63"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:64: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./vector_arithmetics 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:64"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./vector_arithmetics 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_158
#AT_START_159
at_fn_group_banner 159 'testsuite-vexcl.at:69' \
  "vector_copy" "                                    " 13
at_xfail=no
(
  $as_echo "159. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:69" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:69"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:70: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./vector_copy 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:70"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./vector_copy 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_159
#AT_START_160
at_fn_group_banner 160 'testsuite-vexcl.at:75' \
  "vector_create" "                                  " 13
at_xfail=no
(
  $as_echo "160. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:75" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:75"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:76: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./vector_create 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:76"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./vector_create 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:76"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_160
